{"version":3,"sources":["src/snap-carousel-complex/index.tsx"],"names":["PAGE_WIDTH","window","width","Index","r","React","style","flex","backgroundColor","paddingTop","height","ref","loop","itemWidth","sliderWidth","data","Array","keys","windowSize","renderItem","index","key","justifyContent","alignItems","padding","color","fontSize","fill","map","_","i","borderWidth","borderColor","marginTop","flexDirection","onPress","current","snapToPrev","snapToNext"],"mappings":"kKAMMA,E,MAAaC,EAAOC,MAyEXC,UAvEf,WACI,IAAMC,EAAIC,SAA4B,MAEtC,OACI,gBAAC,IAAD,CACIC,MAAO,CACHC,KAAM,EACNC,gBAAiB,UACjBC,WAAY,MAGhB,gBAAC,IAAD,CAAMH,MAAO,CAAEJ,MAAOF,EAAYU,OAAQ,MACtC,gBAAC,IAAD,CACIC,IAAKP,EACLQ,MAAI,EACJC,UAAWb,EACXc,YAAad,EACbe,KAAI,IAAM,IAAIC,MAAM,IAAIC,QACxBC,WAAY,EACZC,WAAY,gBAAGC,EAAH,EAAGA,MAAH,OACR,gBAAC,IAAD,CACIC,IAAKD,EACLd,MAAO,CACHC,KAAM,EACNe,eAAgB,SAChBC,WAAY,SACZf,gBAAiB,UACjBgB,QAAS,KAGb,gBAAC,IAAD,CAAMlB,MAAO,CAAEmB,MAAO,QAASC,SAAU,KAAzC,SACcN,GAEd,gBAAC,IAAD,CAAYd,MAAO,CAAEJ,MAAO,SACvB,IAAIc,MAAM,KAAKW,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAC5B,OACI,gBAAC,IAAD,CACIT,IAAKS,EACLxB,MAAO,CACHyB,YAAa,EACbC,YAAa,YACbR,QAAS,KAGb,gBAAC,IAAD,KAAOM,aASvC,gBAAC,IAAD,CACIxB,MAAO,CACH2B,UAAW,GACXC,cAAe,MACfZ,eAAgB,iBAGpB,gBAAC,IAAD,CAASa,QAAS,iCAAM/B,EAAEgC,cAAR,EAAM,EAAWC,eAC9B,QAEL,gBAAC,IAAD,CAASF,QAAS,iCAAM/B,EAAEgC,cAAR,EAAM,EAAWE,eAC9B","file":"static/js/4.a5b4d680.chunk.js","sourcesContent":["import * as React from 'react';\nimport { ScrollView, Text, View } from 'react-native';\nimport Carousel from 'react-native-snap-carousel';\nimport SButton from '../components/SButton';\nimport { window } from '../constants';\n\nconst PAGE_WIDTH = window.width;\n\nfunction Index() {\n    const r = React.useRef<Carousel<any>>(null);\n\n    return (\n        <View\n            style={{\n                flex: 1,\n                backgroundColor: '#f1f1f1',\n                paddingTop: 100,\n            }}\n        >\n            <View style={{ width: PAGE_WIDTH, height: 240 }}>\n                <Carousel\n                    ref={r}\n                    loop\n                    itemWidth={PAGE_WIDTH}\n                    sliderWidth={PAGE_WIDTH}\n                    data={[...new Array(50).keys()]}\n                    windowSize={3}\n                    renderItem={({ index }: { index: number }) => (\n                        <View\n                            key={index}\n                            style={{\n                                flex: 1,\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                backgroundColor: '#ff7a45',\n                                padding: 16,\n                            }}\n                        >\n                            <Text style={{ color: 'white', fontSize: 30 }}>\n                                {`index:${index}`}\n                            </Text>\n                            <ScrollView style={{ width: '100%' }}>\n                                {new Array(100).fill(0).map((_, i) => {\n                                    return (\n                                        <View\n                                            key={i}\n                                            style={{\n                                                borderWidth: 1,\n                                                borderColor: '#0000001a',\n                                                padding: 16,\n                                            }}\n                                        >\n                                            <Text>{i}</Text>\n                                        </View>\n                                    );\n                                })}\n                            </ScrollView>\n                        </View>\n                    )}\n                />\n            </View>\n            <View\n                style={{\n                    marginTop: 24,\n                    flexDirection: 'row',\n                    justifyContent: 'space-evenly',\n                }}\n            >\n                <SButton onPress={() => r.current?.snapToPrev()}>\n                    {'Prev'}\n                </SButton>\n                <SButton onPress={() => r.current?.snapToNext()}>\n                    {'Next'}\n                </SButton>\n            </View>\n        </View>\n    );\n}\n\nexport default Index;\n"],"sourceRoot":""}