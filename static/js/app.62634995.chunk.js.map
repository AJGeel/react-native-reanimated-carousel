{"version":3,"sources":["src/utils/index.ts","../src/store/index.ts","src/hooks/useToggleButton.tsx","../src/layouts/stack.ts","src/constants/index.ts","../src/Carousel.tsx","../src/hooks/useCarouselController.tsx","../src/hooks/useAutoPlay.ts","../src/hooks/usePropsErrorBoundary.ts","../src/ScrollViewGesture.tsx","../src/hooks/useVisibleRanges.tsx","../src/layouts/BaseLayout.tsx","../src/hooks/useOffsetX.ts","../src/LazyView.tsx","src/components/SButton.tsx","../src/layouts/normal.ts","../src/layouts/parallax.ts","../src/hooks/useInitProps.ts","../src/hooks/useCommonVariables.ts","../src/hooks/useOnProgressChange.ts","src/parallax/index.tsx","src/advanced-parallax/index.tsx","src/pause-advanced-parallax/index.tsx","src/scale-fade-in-out/index.tsx","src/rotate-in-out/index.tsx","src/rotate-scale-fade-in-out/index.tsx","src/anim-tab-bar/index.tsx","../src/layouts/index.tsx","../src/hooks/useLayoutConfig.ts","node_modules/moment/locale sync /^/.//.*$","assets/web-example-qrcode.png","src/home/index.tsx","src/normal/index.tsx","src/stack/index.tsx","src/complex/index.tsx","src/components/QRCode.tsx","src/index.tsx","index.js","../src/index.tsx","src/components/SBImageItem.tsx","src/components/SBTextItem.tsx","src/components/SBItem.tsx","../src/constants/index.ts"],"names":["isIos","Platform","OS","isAndroid","isWeb","CTX","React","createContext","useToggleButton","opts","buttonTitle","defaultValue","status","setStatus","button","onPress","screen","Dimensions","get","horizontalStackLayout","modeConfig","_value","translateX","scale","rotateZ","showLength","snapDirection","moveSize","width","stackInterval","scaleInterval","opacityInterval","rotateZDeg","transform","getCommonVariables","value","validLength","inputRange","getCommonStyles","styles","zIndex","opacity","interpolate","Extrapolate","CLAMP","push","verticalStackLayout","translateY","easeInOutCubic","v","Math","pow","page","floor","abs","diff","Error","Number","MIN_VALUE","ElementsText","AUTOPLAY","window","forwardRef","_props","ref","props","useInitProps","data","rawData","loop","mode","style","height","vertical","autoPlay","windowSize","autoPlayReverse","autoPlayInterval","scrollAnimationDuration","renderItem","onScrollEnd","onSnapToItem","onScrollBegin","onProgressChange","customAnimation","commonVariables","useCommonVariables","size","handlerOffsetX","offsetX","useDerivedValue","totalSize","length","x","isNaN","usePropsErrorBoundary","useOnProgressChange","carouselController","useCarouselController","disable","originalLength","runOnJS","_onScrollEnd","onChange","i","duration","next","prev","sharedPreIndex","sharedIndex","computedIndex","getCurrentIndex","useAutoPlay","start","pause","scrollViewGestureOnScrollBegin","useCallback","current","scrollViewGestureOnScrollEnd","goToIndex","animated","to","useImperativeHandle","scrollTo","visibleRanges","useVisibleRanges","total","viewSize","translation","layoutConfig","useLayoutConfig","renderLayout","item","realIndex","DATA_LENGTH","SINGLE_ITEM","DOUBLE_ITEM","key","index","animationStyle","animationValue","Provider","common","container","View","itemsVertical","itemsHorizontal","map","StyleSheet","create","overflow","flexDirection","options","useSharedValue","useRef","currentFixedPage","round","fixed","convertToSharedIndex","toInt","_sharedIndex","canSliding","scrollWithTiming","toValue","onFinished","withTiming","easing","Easing","easeOutQuart","isFinished","count","nextPage","prevPage","idx","offset","n","timer","stopped","play","setTimeout","clearInterval","useEffect","defaultIndex","viewCount","ScrollViewGesture","useContext","pagingEnabled","enableSnap","panGestureHandlerProps","infinite","maxPage","isHorizontal","touching","scrollEndTranslation","scrollEndVelocity","_withSpring","endWithSpring","origin","velocity","velocityPage","finalPage","min","max","withDecay","deceleration","resetBoundary","onFinish","activeDecay","useAnimatedReaction","panGestureEventHandler","useAnimatedGestureHandler","onStart","_","ctx","cancelAnimation","panOffset","onActive","e","translationX","translationY","panTranslation","boundary","dynamic","onEnd","velocityX","velocityY","directionStyle","useMemo","contentHorizontal","contentVertical","onGestureEvent","children","flex","_windowSize","positiveCount","negativeCount","curIndex","negativeRange","positiveRange","BaseLayout","customConfig","useState","shouldUpdate","setShouldUpdate","offsetXConfig","type","useOffsetX","animatedStyle","useAnimatedStyle","updateView","position","ITEM_LENGTH","VALID_LENGTH","TOTAL_WIDTH","HALF_WIDTH","startPos","MAX","MIN","MAX_SAFE_INTEGER","outputRange","LazyView","SButton","visible","row","centerH","marginT-20","backgroundColor","color","normalLayout","translate","parallaxLayout","baseConfig","parallaxScrollingOffset","parallaxScrollingScale","_autoPlayInterval","_width","_height","defaultHandlerOffsetX","absoluteProgress","PAGE_WIDTH","colors","PaginationItem","animValue","isRotate","animStyle","borderRadius","Index","isVertical","setIsVertical","setAutoPlay","setPagingEnabled","setEnableSnap","progressValue","baseOptions","alignItems","justifyContent","alignSelf","right","top","CustomItem","maskStyle","interpolateColor","pointerEvents","left","bottom","isAutoPlay","setIsAutoPlay","Array","keys","AutoPLay","DATA","r","setLoop","marginVertical","borderBottomWidth","borderBottomColor","Colors","blue30","Item","label","marginTop","containerStyle","labelStyle","grey30","onPressIn","onPressOut","Text","fontSize","Layouts","normal","parallax","horizontalStack","verticalStack","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","code","Object","resolve","module","exports","LayoutsPage","name","CustomAnimations","OtherPage","navigation","useNavigation","ScrollView","stickyHeaderIndices","section","sectionText","TouchableHighlight","navigate","listItem","text","borderColor","grey60","padding","paddingHorizontal","paddingVertical","fontWeight","isFast","setIsFast","SBItem","setMode","setSnapDirection","setAutoPlayReverse","flexWrap","paddingTop","fill","borderWidth","QRCode","tintColor","setVisible","qrCodeContainer","Image","qrCodeImage","source","require","SnapCarouselComplexComponent","SnapCarouselLoopComponent","Stack","createNativeStackNavigator","WebContainer","App","I18nManager","isRTL","setIsRTL","app","fallback","NavigationContainer","Navigator","initialRouteName","screenOptions","contentStyle","headerRight","centerV","forceRTL","Restart","Screen","component","Home","NormalComponent","ParallaxComponent","StackComponent","ComplexComponent","AdvancedParallaxComponent","PauseAdvancedParallaxComponent","ScaleFadeInOutComponent","RotateInOutComponent","RotateScaleFadeInOutComponent","AnimTabBarComponent","registerRootComponent","Carousel","SBImageItem","uri","Date","getTime","ActivityIndicator","image","SBTextItem","pretty","enablePretty","Constants","manifest","extra","isPretty","setIsPretty","onActivated","_Easing","bezier"],"mappings":"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","file":"static/js/app.62634995.chunk.js","sourcesContent":["import { Platform } from 'react-native';\n\nexport const isIos = Platform.OS === 'ios';\nexport const isAndroid = Platform.OS === 'android';\nexport const isWeb = Platform.OS === 'web';\n","import React from 'react';\nimport type { TInitializeCarouselProps } from 'src/hooks/useInitProps';\n\nexport interface IContext {\n    props: TInitializeCarouselProps<any>;\n    common: {\n        size: number;\n        validLength: number;\n    };\n}\n\nexport const CTX = React.createContext<IContext>({} as IContext);\n","import * as React from 'react';\nimport SButton from '../components/SButton';\n\nexport function useToggleButton(opts: {\n    defaultValue: boolean;\n    buttonTitle: string;\n}) {\n    const { buttonTitle, defaultValue = false } = opts;\n    const [status, setStatus] = React.useState(defaultValue);\n\n    const button = React.useMemo(() => {\n        return (\n            <SButton onPress={() => setStatus(!status)}>\n                {buttonTitle}: {`${status}`}\n            </SButton>\n        );\n    }, [status, buttonTitle]);\n\n    return {\n        status,\n        button,\n    };\n}\n","import { useMemo } from 'react';\nimport { Dimensions, TransformsStyle, ViewStyle } from 'react-native';\nimport { Extrapolate, interpolate } from 'react-native-reanimated';\nimport type { ComputedDirectionTypes, CustomConfig } from 'src/types';\n\nconst screen = Dimensions.get('window');\n\nexport interface ILayoutConfig {\n    showLength?: number;\n    moveSize?: number;\n    stackInterval?: number;\n    scaleInterval?: number;\n    opacityInterval?: number;\n    rotateZDeg?: number;\n    snapDirection?: 'left' | 'right';\n}\n\nexport type TStackModeProps = ComputedDirectionTypes<{\n    /**\n     * Carousel Animated transitions.\n     */\n    mode?: 'horizontal-stack' | 'vertical-stack';\n    /**\n     * Stack animation style.\n     * @default\n     *     mode: 'vertical',\n     *     snapDirection: 'right',\n     *     moveSize: window.width,\n     *     stackInterval: 30,\n     *     scaleInterval: 0.08,\n     *     rotateZDeg: 135,\n     */\n    modeConfig?: ILayoutConfig;\n}>;\n\nexport function horizontalStackLayout(modeConfig: ILayoutConfig = {}) {\n    return (_value: number) => {\n        'worklet';\n\n        const {\n            showLength,\n            snapDirection = 'left',\n            moveSize = screen.width,\n            stackInterval = 18,\n            scaleInterval = 0.04,\n            opacityInterval = 0.1,\n            rotateZDeg = 30,\n        } = modeConfig;\n\n        const transform: TransformsStyle['transform'] = [];\n        const { validLength, value, inputRange } = getCommonVariables({\n            showLength: showLength!,\n            value: _value,\n            snapDirection,\n        });\n        const { zIndex, opacity } = getCommonStyles({\n            validLength,\n            value,\n            opacityInterval,\n            snapDirection,\n        });\n\n        const styles: ViewStyle = {\n            transform,\n            zIndex,\n            opacity,\n        };\n\n        let translateX: number;\n        let scale: number;\n        let rotateZ: string;\n\n        if (snapDirection === 'left') {\n            translateX = interpolate(\n                value,\n                inputRange,\n                [-moveSize, 0, validLength * stackInterval],\n                Extrapolate.CLAMP\n            );\n            scale = interpolate(\n                value,\n                inputRange,\n                [1, 1, 1 - validLength * scaleInterval],\n                Extrapolate.CLAMP\n            );\n            rotateZ = `${interpolate(\n                value,\n                inputRange,\n                [-rotateZDeg, 0, 0],\n                Extrapolate.CLAMP\n            )}deg`;\n        } else if (snapDirection === 'right') {\n            translateX = interpolate(\n                value,\n                inputRange,\n                [-validLength * stackInterval, 0, moveSize],\n                Extrapolate.CLAMP\n            );\n            scale = interpolate(\n                value,\n                inputRange,\n                [1 - validLength * scaleInterval, 1, 1],\n                Extrapolate.CLAMP\n            );\n            rotateZ = `${interpolate(\n                value,\n                inputRange,\n                [0, 0, rotateZDeg],\n                Extrapolate.CLAMP\n            )}deg`;\n        }\n\n        transform.push(\n            {\n                translateX: translateX!,\n            },\n            {\n                scale: scale!,\n            },\n            {\n                rotateZ: rotateZ!,\n            }\n        );\n\n        return styles;\n    };\n}\n\nexport function useHorizontalStackLayout(\n    customAnimationConfig: ILayoutConfig = {},\n    customConfig: CustomConfig = {}\n) {\n    const config = useMemo(\n        () => ({\n            type:\n                customAnimationConfig.snapDirection === 'right'\n                    ? 'negative'\n                    : 'positive',\n            viewCount: customAnimationConfig.showLength,\n            ...customConfig,\n        }),\n        [customAnimationConfig, customConfig]\n    );\n\n    return {\n        layout: horizontalStackLayout(customAnimationConfig),\n        config,\n    };\n}\n\nexport function verticalStackLayout(modeConfig: ILayoutConfig = {}) {\n    return (_value: number) => {\n        'worklet';\n\n        const {\n            showLength,\n            snapDirection = 'left',\n            moveSize = screen.width,\n            stackInterval = 18,\n            scaleInterval = 0.04,\n            opacityInterval = 0.1,\n            rotateZDeg = 30,\n        } = modeConfig;\n        const transform: TransformsStyle['transform'] = [];\n        const { validLength, value, inputRange } = getCommonVariables({\n            showLength: showLength!,\n            value: _value,\n            snapDirection,\n        });\n        const { zIndex, opacity } = getCommonStyles({\n            validLength,\n            value,\n            opacityInterval,\n            snapDirection,\n        });\n\n        const styles: ViewStyle = {\n            transform,\n            zIndex,\n            opacity,\n        };\n\n        let translateX: number;\n        let scale: number;\n        let rotateZ: string;\n        let translateY: number;\n\n        if (snapDirection === 'left') {\n            translateX = interpolate(\n                value,\n                inputRange,\n                [-moveSize, 0, 0],\n                Extrapolate.CLAMP\n            );\n            scale = interpolate(\n                value,\n                inputRange,\n                [1, 1, 1 - validLength * scaleInterval],\n                Extrapolate.CLAMP\n            );\n            rotateZ = `${interpolate(\n                value,\n                inputRange,\n                [-rotateZDeg, 0, 0],\n                Extrapolate.CLAMP\n            )}deg`;\n            translateY = interpolate(\n                value,\n                inputRange,\n                [0, 0, validLength * stackInterval],\n                Extrapolate.CLAMP\n            );\n        } else if (snapDirection === 'right') {\n            translateX = interpolate(\n                value,\n                inputRange,\n                [0, 0, moveSize],\n                Extrapolate.CLAMP\n            );\n            scale = interpolate(\n                value,\n                inputRange,\n                [1 - validLength * scaleInterval, 1, 1],\n                Extrapolate.CLAMP\n            );\n            rotateZ = `${interpolate(\n                value,\n                inputRange,\n                [0, 0, rotateZDeg],\n                Extrapolate.CLAMP\n            )}deg`;\n            translateY = interpolate(\n                value,\n                inputRange,\n                [validLength * stackInterval, 0, 0],\n                Extrapolate.CLAMP\n            );\n        }\n\n        transform.push(\n            {\n                translateX: translateX!,\n            },\n            {\n                scale: scale!,\n            },\n            {\n                rotateZ: rotateZ!,\n            },\n            {\n                translateY: translateY!,\n            }\n        );\n\n        return styles;\n    };\n}\n\nfunction getCommonVariables(opts: {\n    value: number;\n    showLength: number;\n    snapDirection: 'left' | 'right';\n}) {\n    'worklet';\n\n    const { showLength, value: _value, snapDirection } = opts;\n    function easeInOutCubic(v: number): number {\n        return v < 0.5 ? 4 * v * v * v : 1 - Math.pow(-2 * v + 2, 3) / 2;\n    }\n    const page = Math.floor(Math.abs(_value));\n    const diff = Math.abs(_value) % 1;\n    const value =\n        _value < 0\n            ? -(page + easeInOutCubic(diff))\n            : page + easeInOutCubic(diff);\n    const validLength = showLength! - 1;\n\n    let inputRange: [number, number, number];\n\n    if (snapDirection === 'left') {\n        inputRange = [-1, 0, validLength];\n    } else if (snapDirection === 'right') {\n        inputRange = [-validLength, 0, 1];\n    } else {\n        throw Error('snapDirection must be set to either left or right');\n    }\n\n    return {\n        inputRange,\n        validLength,\n        value,\n    };\n}\n\nfunction getCommonStyles(opts: {\n    value: number;\n    validLength: number;\n    opacityInterval: number;\n    snapDirection: 'left' | 'right';\n}) {\n    'worklet';\n\n    const { snapDirection, validLength, value, opacityInterval } = opts;\n\n    let zIndex: number;\n    let opacity: number;\n\n    if (snapDirection === 'left') {\n        zIndex =\n            Math.floor(\n                interpolate(\n                    value,\n                    [-1.5, -1, -1 + Number.MIN_VALUE, 0, validLength],\n                    [\n                        Number.MIN_VALUE,\n                        validLength,\n                        validLength,\n                        validLength - 1,\n                        -1,\n                    ]\n                ) * 10000\n            ) / 100;\n\n        opacity = interpolate(\n            value,\n            [-1, 0, validLength - 1, validLength],\n            [0.25, 1, 1 - (validLength - 1) * opacityInterval, 0.25]\n        );\n    } else if (snapDirection === 'right') {\n        zIndex =\n            Math.floor(\n                interpolate(\n                    value,\n                    [-validLength, 0, 1 - Number.MIN_VALUE, 1, 1.5],\n                    [\n                        1,\n                        validLength - 1,\n                        validLength,\n                        validLength,\n                        Number.MIN_VALUE,\n                    ]\n                ) * 10000\n            ) / 100;\n        opacity = interpolate(\n            value,\n            [-validLength, 1 - validLength, 0, 1],\n            [0.25, 1 - (validLength - 1) * opacityInterval, 1, 0.25]\n        );\n    } else {\n        throw Error('snapDirection must be set to either left or right');\n    }\n\n    return {\n        zIndex,\n        opacity,\n    };\n}\n","import type { ScaledSize } from 'react-native';\nimport { Dimensions } from 'react-native';\nimport { isWeb } from '../utils';\n\nexport const ElementsText = {\n    AUTOPLAY: 'AutoPlay',\n};\n\nexport const window: ScaledSize = isWeb\n    ? {\n          ...Dimensions.get('window'),\n          width: 375,\n      }\n    : Dimensions.get('window');\n","import React, { PropsWithChildren } from 'react';\nimport Animated, { runOnJS, useDerivedValue } from 'react-native-reanimated';\n\nimport { useCarouselController } from './hooks/useCarouselController';\nimport { useAutoPlay } from './hooks/useAutoPlay';\nimport { usePropsErrorBoundary } from './hooks/usePropsErrorBoundary';\nimport { ScrollViewGesture } from './ScrollViewGesture';\nimport { useVisibleRanges } from './hooks/useVisibleRanges';\n\nimport type { ICarouselInstance, TCarouselProps } from './types';\nimport { StyleSheet, View } from 'react-native';\nimport { DATA_LENGTH } from './constants';\nimport { BaseLayout } from './layouts/BaseLayout';\nimport { useLayoutConfig } from './hooks/useLayoutConfig';\nimport { useInitProps } from './hooks/useInitProps';\nimport { CTX } from './store';\nimport { useCommonVariables } from './hooks/useCommonVariables';\nimport { useOnProgressChange } from './hooks/useOnProgressChange';\n\nfunction Carousel<T>(\n    _props: PropsWithChildren<TCarouselProps<T>>,\n    ref: React.Ref<ICarouselInstance>\n) {\n    const props = useInitProps(_props);\n\n    const {\n        data,\n        rawData,\n        loop,\n        mode,\n        style,\n        width,\n        height,\n        vertical,\n        autoPlay,\n        windowSize,\n        autoPlayReverse,\n        autoPlayInterval,\n        scrollAnimationDuration,\n        renderItem,\n        onScrollEnd,\n        onSnapToItem,\n        onScrollBegin,\n        onProgressChange,\n        customAnimation,\n    } = props;\n\n    const commonVariables = useCommonVariables(props);\n    const { size, handlerOffsetX } = commonVariables;\n\n    const offsetX = useDerivedValue(() => {\n        const totalSize = size * data.length;\n        const x = handlerOffsetX.value % totalSize;\n\n        if (!loop) {\n            return handlerOffsetX.value;\n        }\n        return isNaN(x) ? 0 : x;\n    }, [loop, size, data]);\n\n    usePropsErrorBoundary(props);\n    useOnProgressChange({ size, offsetX, rawData, onProgressChange });\n\n    const carouselController = useCarouselController({\n        loop,\n        size,\n        handlerOffsetX,\n        length: data.length,\n        disable: !data.length,\n        originalLength: data.length,\n        onScrollEnd: () => runOnJS(_onScrollEnd)(),\n        onScrollBegin: () => !!onScrollBegin && runOnJS(onScrollBegin)(),\n        onChange: (i) => !!onSnapToItem && runOnJS(onSnapToItem)(i),\n        duration: scrollAnimationDuration,\n    });\n\n    const {\n        next,\n        prev,\n        sharedPreIndex,\n        sharedIndex,\n        computedIndex,\n        getCurrentIndex,\n    } = carouselController;\n\n    const { start, pause } = useAutoPlay({\n        autoPlay,\n        autoPlayInterval,\n        autoPlayReverse,\n        carouselController,\n    });\n\n    const scrollViewGestureOnScrollBegin = React.useCallback(() => {\n        pause();\n        onScrollBegin?.();\n    }, [onScrollBegin, pause]);\n\n    const _onScrollEnd = React.useCallback(() => {\n        computedIndex();\n        onScrollEnd?.(sharedPreIndex.current, sharedIndex.current);\n    }, [sharedPreIndex, sharedIndex, computedIndex, onScrollEnd]);\n\n    const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n        start();\n        _onScrollEnd();\n    }, [_onScrollEnd, start]);\n\n    const goToIndex = React.useCallback(\n        (i: number, animated?: boolean) => {\n            carouselController.to(i, animated);\n        },\n        [carouselController]\n    );\n\n    React.useImperativeHandle(\n        ref,\n        () => ({\n            next,\n            prev,\n            getCurrentIndex,\n            goToIndex,\n            scrollTo: carouselController.scrollTo,\n        }),\n        [getCurrentIndex, goToIndex, next, prev, carouselController.scrollTo]\n    );\n\n    const visibleRanges = useVisibleRanges({\n        total: data.length,\n        viewSize: size,\n        translation: handlerOffsetX,\n        windowSize,\n    });\n\n    const layoutConfig = useLayoutConfig<T>({ ...props, size });\n\n    const renderLayout = React.useCallback(\n        (item: T, i: number) => {\n            let realIndex = i;\n            if (rawData.length === DATA_LENGTH.SINGLE_ITEM) {\n                realIndex = i % 1;\n            }\n\n            if (rawData.length === DATA_LENGTH.DOUBLE_ITEM) {\n                realIndex = i % 2;\n            }\n\n            return (\n                <BaseLayout\n                    key={i}\n                    index={i}\n                    handlerOffsetX={offsetX}\n                    visibleRanges={visibleRanges}\n                    animationStyle={customAnimation || layoutConfig}\n                >\n                    {({ animationValue }) =>\n                        renderItem({\n                            item,\n                            index: realIndex,\n                            animationValue,\n                        })\n                    }\n                </BaseLayout>\n            );\n        },\n        [\n            rawData,\n            offsetX,\n            visibleRanges,\n            renderItem,\n            layoutConfig,\n            customAnimation,\n        ]\n    );\n\n    return (\n        <CTX.Provider value={{ props, common: commonVariables }}>\n            <View\n                style={[\n                    styles.container,\n                    { width: width || '100%', height: height || '100%' },\n                    style,\n                ]}\n            >\n                <ScrollViewGesture\n                    size={size}\n                    translation={handlerOffsetX}\n                    onScrollBegin={scrollViewGestureOnScrollBegin}\n                    onScrollEnd={scrollViewGestureOnScrollEnd}\n                >\n                    <Animated.View\n                        key={mode}\n                        style={[\n                            styles.container,\n                            {\n                                width: width || '100%',\n                                height: height || '100%',\n                            },\n                            style,\n                            vertical\n                                ? styles.itemsVertical\n                                : styles.itemsHorizontal,\n                        ]}\n                    >\n                        {data.map(renderLayout)}\n                    </Animated.View>\n                </ScrollViewGesture>\n            </View>\n        </CTX.Provider>\n    );\n}\n\nexport default React.forwardRef(Carousel) as typeof Carousel;\n\nconst styles = StyleSheet.create({\n    container: {\n        overflow: 'hidden',\n    },\n    itemsHorizontal: {\n        flexDirection: 'row',\n    },\n    itemsVertical: {\n        flexDirection: 'column',\n    },\n});\n","import React from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { Easing } from '../constants';\nimport { runOnJS, useSharedValue, withTiming } from 'react-native-reanimated';\nimport type { TCarouselActionOptions } from '../types';\n\ninterface IOpts {\n    loop: boolean;\n    size: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n    disable?: boolean;\n    duration?: number;\n    originalLength: number;\n    length: number;\n    onScrollBegin?: () => void;\n    onScrollEnd?: () => void;\n    // the length before fill data\n    onChange: (index: number) => void;\n}\n\nexport interface ICarouselController {\n    length: number;\n    index: Animated.SharedValue<number>;\n    sharedIndex: React.MutableRefObject<number>;\n    sharedPreIndex: React.MutableRefObject<number>;\n    prev: (opts?: TCarouselActionOptions) => void;\n    next: (opts?: TCarouselActionOptions) => void;\n    computedIndex: () => void;\n    getCurrentIndex: () => number;\n    to: (index: number, animated?: boolean) => void;\n    scrollTo: (opts?: TCarouselActionOptions) => void;\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n    const {\n        size,\n        loop,\n        handlerOffsetX,\n        disable = false,\n        originalLength,\n        length,\n        onChange,\n        duration,\n    } = options;\n\n    const index = useSharedValue<number>(0);\n    // The Index displayed to the user\n    const sharedIndex = React.useRef<number>(0);\n    const sharedPreIndex = React.useRef<number>(0);\n\n    const currentFixedPage = React.useCallback(() => {\n        if (loop) {\n            return -Math.round(handlerOffsetX.value / size);\n        }\n\n        const fixed = (handlerOffsetX.value / size) % length;\n        return Math.round(\n            handlerOffsetX.value <= 0\n                ? Math.abs(fixed)\n                : Math.abs(fixed > 0 ? length - fixed : 0)\n        );\n    }, [handlerOffsetX, length, size, loop]);\n\n    const convertToSharedIndex = React.useCallback(\n        (i: number) => {\n            if (loop) {\n                switch (originalLength) {\n                    case 1:\n                        return 0;\n                    case 2:\n                        return i % 2;\n                }\n            }\n            return i;\n        },\n        [originalLength, loop]\n    );\n\n    const computedIndex = React.useCallback(() => {\n        sharedPreIndex.current = sharedIndex.current;\n        const toInt = (handlerOffsetX.value / size) % length;\n        const i =\n            handlerOffsetX.value <= 0\n                ? Math.abs(toInt)\n                : Math.abs(toInt > 0 ? length - toInt : 0);\n        index.value = i;\n        const _sharedIndex = convertToSharedIndex(i);\n        sharedIndex.current = _sharedIndex;\n        onChange(_sharedIndex);\n    }, [\n        length,\n        handlerOffsetX,\n        sharedPreIndex,\n        index,\n        size,\n        sharedIndex,\n        convertToSharedIndex,\n        onChange,\n    ]);\n\n    const getCurrentIndex = React.useCallback(() => {\n        return index.value;\n    }, [index]);\n\n    const canSliding = React.useCallback(() => {\n        return !disable;\n    }, [disable]);\n\n    const onScrollEnd = React.useCallback(() => {\n        options.onScrollEnd?.();\n    }, [options]);\n\n    const onScrollBegin = React.useCallback(() => {\n        options.onScrollBegin?.();\n    }, [options]);\n\n    const scrollWithTiming = React.useCallback(\n        (toValue: number, onFinished?: () => void) => {\n            return withTiming(\n                toValue,\n                { duration, easing: Easing.easeOutQuart },\n                (isFinished: boolean) => {\n                    if (isFinished) {\n                        runOnJS(onScrollEnd)();\n                        onFinished && runOnJS(onFinished)();\n                    }\n                }\n            );\n        },\n        [onScrollEnd, duration]\n    );\n\n    const next = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value >= length - 1)) return;\n\n            onScrollBegin?.();\n\n            const nextPage = currentFixedPage() + count;\n            index.value = nextPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -nextPage * size,\n                    onFinished\n                );\n            } else {\n                handlerOffsetX.value = -nextPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            length,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const prev = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value <= 0)) return;\n\n            onScrollBegin?.();\n\n            const prevPage = currentFixedPage() - count;\n            index.value = prevPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -prevPage * size,\n                    onFinished\n                );\n            } else {\n                handlerOffsetX.value = -prevPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const to = React.useCallback(\n        (idx: number, animated: boolean = false) => {\n            if (idx === index.value) return;\n            if (!canSliding()) return;\n\n            onScrollBegin?.();\n\n            const offset = handlerOffsetX.value + (index.value - idx) * size;\n\n            if (animated) {\n                index.value = idx;\n                handlerOffsetX.value = scrollWithTiming(offset);\n            } else {\n                handlerOffsetX.value = offset;\n                index.value = idx;\n                runOnJS(onScrollEnd)();\n            }\n        },\n        [\n            index,\n            canSliding,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            onScrollEnd,\n        ]\n    );\n\n    const scrollTo = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count, animated = false, onFinished } = opts;\n            if (!count) {\n                return;\n            }\n            const n = Math.round(count);\n            if (n < 0) {\n                prev({ count: Math.abs(n), animated, onFinished });\n            } else {\n                next({ count: n, animated, onFinished });\n            }\n        },\n        [prev, next]\n    );\n\n    return {\n        next,\n        prev,\n        to,\n        scrollTo,\n        index,\n        length,\n        sharedIndex,\n        sharedPreIndex,\n        computedIndex,\n        getCurrentIndex,\n    };\n}\n","import * as React from 'react';\nimport type { ICarouselController } from './useCarouselController';\n\nexport function useAutoPlay(opts: {\n    autoPlay?: boolean;\n    autoPlayInterval?: number;\n    autoPlayReverse?: boolean;\n    carouselController: ICarouselController;\n}) {\n    const {\n        autoPlay = false,\n        autoPlayReverse = false,\n        autoPlayInterval,\n        carouselController,\n    } = opts;\n\n    const timer = React.useRef<NodeJS.Timer>();\n    const stopped = React.useRef<boolean>(!autoPlay);\n\n    const play = React.useCallback(() => {\n        if (stopped.current) {\n            return;\n        }\n\n        timer.current = setTimeout(() => {\n            autoPlayReverse\n                ? carouselController.prev({ onFinished: play })\n                : carouselController.next({ onFinished: play });\n        }, autoPlayInterval);\n    }, [autoPlayReverse, autoPlayInterval, carouselController]);\n\n    const pause = React.useCallback(() => {\n        timer.current && clearInterval(timer.current);\n        stopped.current = true;\n    }, []);\n\n    const start = React.useCallback(() => {\n        if (!autoPlay) {\n            return;\n        }\n        stopped.current = false;\n        play();\n    }, [play, autoPlay]);\n\n    React.useEffect(() => {\n        if (autoPlay) {\n            start();\n        } else {\n            pause();\n        }\n        return pause;\n    }, [pause, start, autoPlay]);\n\n    return {\n        pause,\n        start,\n    };\n}\n","import React from 'react';\nimport type { TCarouselProps } from 'src/types';\n\nexport function usePropsErrorBoundary(props: TCarouselProps) {\n    React.useEffect(() => {\n        const { defaultIndex, data } = props;\n\n        const viewCount = data.length;\n        if (typeof defaultIndex === 'number' && viewCount > 0) {\n            if (defaultIndex < 0 || defaultIndex >= viewCount) {\n                throw Error(\n                    'DefaultIndex must be in the range of data length.'\n                );\n            }\n        }\n\n        // TODO\n        if (!props.mode || props.mode === 'parallax') {\n            if (!props.vertical && !props.width) {\n                throw Error(\n                    '`width` must be specified for vertical carousels.'\n                );\n            }\n            if (props.vertical && !props.height) {\n                throw Error(\n                    '`height` must be specified for vertical carousels.'\n                );\n            }\n        }\n    }, [props]);\n}\n","import React from 'react';\nimport { StyleProp, StyleSheet, ViewStyle } from 'react-native';\nimport {\n    PanGestureHandler,\n    PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n    cancelAnimation,\n    runOnJS,\n    useAnimatedGestureHandler,\n    useAnimatedReaction,\n    useDerivedValue,\n    useSharedValue,\n    withDecay,\n    withTiming,\n} from 'react-native-reanimated';\nimport { Easing } from './constants';\nimport { CTX } from './store';\n\ntype GestureContext = {\n    panOffset: number;\n    max: number;\n};\n\ninterface Props {\n    size: number;\n    infinite?: boolean;\n    onScrollEnd?: () => void;\n    onScrollBegin?: () => void;\n    style?: StyleProp<ViewStyle>;\n    translation: Animated.SharedValue<number>;\n}\n\nconst IScrollViewGesture: React.FC<Props> = (props) => {\n    const {\n        props: {\n            vertical,\n            style,\n            data,\n            pagingEnabled,\n            enableSnap,\n            panGestureHandlerProps,\n            loop: infinite,\n            scrollAnimationDuration,\n        },\n    } = React.useContext(CTX);\n\n    const { translation, onScrollBegin, onScrollEnd, size } = props;\n\n    const maxPage = data.length;\n    const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n    const touching = useSharedValue(false);\n    const scrollEndTranslation = useSharedValue(0);\n    const scrollEndVelocity = useSharedValue(0);\n\n    const _withSpring = React.useCallback(\n        (toValue: number, onFinished?: () => void) => {\n            'worklet';\n            return withTiming(\n                toValue,\n                {\n                    duration: scrollAnimationDuration,\n                    easing: Easing.easeOutQuart,\n                },\n                (isFinished) => {\n                    if (isFinished) {\n                        onFinished?.();\n                    }\n                }\n            );\n        },\n        [scrollAnimationDuration]\n    );\n\n    const endWithSpring = React.useCallback(\n        (onFinished?: () => void) => {\n            'worklet';\n            const origin = translation.value;\n            const velocity = scrollEndVelocity.value;\n            if (!pagingEnabled) {\n                if (enableSnap) {\n                    const nextPage =\n                        Math.round((origin + velocity * 0.4) / size) * size;\n                    translation.value = _withSpring(nextPage, onFinished);\n                    return;\n                }\n                translation.value = withDecay({\n                    velocity,\n                    deceleration: 0.999,\n                });\n                return;\n            }\n            const page = Math.round(-translation.value / size);\n            const velocityPage = Math.round(\n                -(translation.value + scrollEndVelocity.value) / size\n            );\n            let finalPage = Math.min(\n                page + 1,\n                Math.max(page - 1, velocityPage)\n            );\n            if (!infinite) {\n                finalPage = Math.min(maxPage - 1, Math.max(0, finalPage));\n            }\n\n            translation.value = _withSpring(-finalPage * size, onFinished);\n        },\n        [\n            infinite,\n            _withSpring,\n            translation,\n            scrollEndVelocity,\n            size,\n            maxPage,\n            pagingEnabled,\n            enableSnap,\n        ]\n    );\n\n    const resetBoundary = React.useCallback(() => {\n        'worklet';\n        const onFinish = (isFinished: boolean) => {\n            if (isFinished) {\n                touching.value = false;\n                onScrollEnd && runOnJS(onScrollEnd)();\n            }\n        };\n        const activeDecay = () => {\n            touching.value = true;\n            translation.value = withDecay(\n                { velocity: scrollEndVelocity.value },\n                onFinish\n            );\n        };\n\n        if (touching.value) {\n            return;\n        }\n\n        if (translation.value > 0) {\n            if (scrollEndTranslation.value < 0) {\n                activeDecay();\n                return;\n            }\n            if (!infinite) {\n                translation.value = _withSpring(0);\n                return;\n            }\n        }\n\n        if (translation.value < -((maxPage - 1) * size)) {\n            if (scrollEndTranslation.value > 0) {\n                activeDecay();\n                return;\n            }\n            if (!infinite) {\n                translation.value = _withSpring(-((maxPage - 1) * size));\n                return;\n            }\n        }\n    }, [\n        infinite,\n        touching,\n        _withSpring,\n        translation,\n        scrollEndTranslation,\n        scrollEndVelocity,\n        onScrollEnd,\n        maxPage,\n        size,\n    ]);\n\n    useAnimatedReaction(\n        () => translation.value,\n        () => {\n            if (!pagingEnabled) {\n                resetBoundary();\n            }\n        },\n        [pagingEnabled]\n    );\n\n    const panGestureEventHandler = useAnimatedGestureHandler<\n        PanGestureHandlerGestureEvent,\n        GestureContext\n    >(\n        {\n            onStart: (_, ctx) => {\n                touching.value = true;\n                cancelAnimation(translation);\n                onScrollBegin && runOnJS(onScrollBegin)();\n                ctx.max = (maxPage - 1) * size;\n                ctx.panOffset = translation.value;\n            },\n            onActive: (e, ctx) => {\n                touching.value = true;\n                const { translationX, translationY } = e;\n                let panTranslation = isHorizontal.value\n                    ? translationX\n                    : translationY;\n\n                if (\n                    !infinite &&\n                    (translation.value > 0 || translation.value < -ctx.max)\n                ) {\n                    const boundary = translation.value > 0 ? 0 : -ctx.max;\n                    const fixed = boundary - ctx.panOffset;\n                    const dynamic = panTranslation - fixed;\n                    translation.value = boundary + dynamic * 0.5;\n                    return;\n                }\n\n                translation.value = ctx.panOffset + panTranslation;\n            },\n            onEnd: (e) => {\n                const { velocityX, velocityY, translationX, translationY } = e;\n                scrollEndVelocity.value = isHorizontal.value\n                    ? velocityX\n                    : velocityY;\n                scrollEndTranslation.value = isHorizontal.value\n                    ? translationX\n                    : translationY;\n\n                endWithSpring(() => onScrollEnd && runOnJS(onScrollEnd)());\n\n                if (!infinite) {\n                    touching.value = false;\n                }\n            },\n        },\n        [pagingEnabled, isHorizontal.value, infinite, maxPage, size, enableSnap]\n    );\n\n    const directionStyle = React.useMemo(() => {\n        return vertical ? styles.contentHorizontal : styles.contentVertical;\n    }, [vertical]);\n\n    return (\n        <Animated.View style={[styles.container, directionStyle, style]}>\n            <PanGestureHandler\n                {...panGestureHandlerProps}\n                onGestureEvent={panGestureEventHandler}\n            >\n                {props.children}\n            </PanGestureHandler>\n        </Animated.View>\n    );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        overflow: 'hidden',\n    },\n    contentVertical: {\n        flexDirection: 'column',\n    },\n    contentHorizontal: {\n        flexDirection: 'row',\n    },\n});\n","import type Animated from 'react-native-reanimated';\nimport { useDerivedValue } from 'react-native-reanimated';\n\nexport type IVisibleRanges = Animated.SharedValue<{\n    negativeRange: number[];\n    positiveRange: number[];\n}>;\n\nexport function useVisibleRanges(options: {\n    total: number;\n    viewSize: number;\n    windowSize?: number;\n    translation: Animated.SharedValue<number>;\n}): IVisibleRanges {\n    const {\n        total = 0,\n        viewSize,\n        translation,\n        windowSize: _windowSize = 0,\n    } = options;\n\n    const windowSize = total <= _windowSize ? total : _windowSize;\n\n    const ranges = useDerivedValue(() => {\n        const positiveCount = Math.round(windowSize / 2);\n        const negativeCount = windowSize - positiveCount;\n        let curIndex = Math.round(-translation.value / viewSize);\n        curIndex = curIndex < 0 ? (curIndex % total) + total : curIndex;\n        const negativeRange = [\n            (curIndex - negativeCount + total) % total,\n            (curIndex - 1 + total) % total,\n        ];\n        const positiveRange = [\n            (curIndex + total) % total,\n            (curIndex + positiveCount + total) % total,\n        ];\n        if (negativeRange[0] < total && negativeRange[0] > negativeRange[1]) {\n            negativeRange[1] = total - 1;\n            positiveRange[0] = 0;\n        }\n        if (positiveRange[0] > positiveRange[1]) {\n            negativeRange[1] = total - 1;\n            positiveRange[0] = 0;\n        }\n        return { negativeRange, positiveRange };\n    }, [total, windowSize, translation]);\n\n    return ranges;\n}\n","import React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport Animated, {\n    runOnJS,\n    useAnimatedReaction,\n    useAnimatedStyle,\n    useDerivedValue,\n} from 'react-native-reanimated';\nimport { IOpts, useOffsetX } from '../hooks/useOffsetX';\nimport type { IVisibleRanges } from '../hooks/useVisibleRanges';\nimport { LazyView } from '../LazyView';\nimport { CTX } from '../store';\nimport type { ILayoutConfig } from './stack';\n\nexport type TAnimationStyle = (\n    value: number\n) => Animated.AnimatedStyleProp<ViewStyle>;\n\nexport const BaseLayout: React.FC<{\n    index: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n    visibleRanges: IVisibleRanges;\n    animationStyle: TAnimationStyle;\n    children: (ctx: {\n        animationValue: Animated.SharedValue<number>;\n    }) => React.ReactElement;\n}> = (props) => {\n    const { handlerOffsetX, index, children, visibleRanges, animationStyle } =\n        props;\n\n    const context = React.useContext(CTX);\n    const {\n        props: {\n            loop,\n            data,\n            width,\n            height,\n            vertical,\n            customConfig,\n            mode,\n            modeConfig,\n        },\n    } = context;\n    const size = vertical ? height : width;\n    const [shouldUpdate, setShouldUpdate] = React.useState(false);\n    let offsetXConfig: IOpts = {\n        handlerOffsetX,\n        index,\n        size,\n        data,\n        loop,\n        ...(typeof customConfig === 'function' ? customConfig() : {}),\n    };\n\n    if (mode === 'horizontal-stack') {\n        const { snapDirection, showLength } = modeConfig as ILayoutConfig;\n\n        offsetXConfig = {\n            handlerOffsetX,\n            index,\n            size,\n            data,\n            loop,\n            type: snapDirection === 'right' ? 'negative' : 'positive',\n            viewCount: showLength,\n        };\n    }\n\n    const x = useOffsetX(offsetXConfig, visibleRanges);\n    const animationValue = useDerivedValue(() => x.value / size, [x, size]);\n    const animatedStyle = useAnimatedStyle(\n        () => animationStyle(x.value / size),\n        [animationStyle]\n    );\n\n    const updateView = React.useCallback(\n        (negativeRange: number[], positiveRange: number[]) => {\n            setShouldUpdate(\n                (index >= negativeRange[0] && index <= negativeRange[1]) ||\n                    (index >= positiveRange[0] && index <= positiveRange[1])\n            );\n        },\n        [index]\n    );\n\n    useAnimatedReaction(\n        () => visibleRanges.value,\n        () => {\n            runOnJS(updateView)(\n                visibleRanges.value.negativeRange,\n                visibleRanges.value.positiveRange\n            );\n        },\n        [visibleRanges.value]\n    );\n\n    return (\n        <Animated.View\n            style={[\n                {\n                    width: width || '100%',\n                    height: height || '100%',\n                    position: 'absolute',\n                },\n                animatedStyle,\n            ]}\n        >\n            <LazyView shouldUpdate={shouldUpdate}>\n                {children({ animationValue })}\n            </LazyView>\n        </Animated.View>\n    );\n};\n","import Animated, {\n    Extrapolate,\n    interpolate,\n    useDerivedValue,\n} from 'react-native-reanimated';\nimport type { IVisibleRanges } from './useVisibleRanges';\n\nexport interface IOpts {\n    index: number;\n    size: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n    data: unknown[];\n    type?: 'positive' | 'negative';\n    viewCount?: number;\n    loop?: boolean;\n}\n\nexport const useOffsetX = (opts: IOpts, visibleRanges: IVisibleRanges) => {\n    const {\n        handlerOffsetX,\n        index,\n        size,\n        loop,\n        data,\n        type = 'positive',\n        viewCount = Math.round((data.length - 1) / 2),\n    } = opts;\n\n    const ITEM_LENGTH = data.length;\n    const VALID_LENGTH = ITEM_LENGTH - 1;\n    const TOTAL_WIDTH = size * ITEM_LENGTH;\n    const HALF_WIDTH = 0.5 * size;\n\n    const positiveCount =\n        type === 'positive' ? viewCount : VALID_LENGTH - viewCount;\n\n    let startPos = size * index;\n    if (index > positiveCount) {\n        startPos = (index - ITEM_LENGTH) * size;\n    }\n\n    const MAX = positiveCount * size;\n    const MIN = -((VALID_LENGTH - positiveCount) * size);\n\n    const x = useDerivedValue(() => {\n        const { negativeRange, positiveRange } = visibleRanges.value;\n        if (\n            (index < negativeRange[0] || index > negativeRange[1]) &&\n            (index < positiveRange[0] || index > positiveRange[1])\n        ) {\n            return Number.MAX_SAFE_INTEGER;\n        }\n\n        if (loop) {\n            const inputRange = [\n                -TOTAL_WIDTH,\n                MIN - HALF_WIDTH - startPos - Number.MIN_VALUE,\n                MIN - HALF_WIDTH - startPos,\n                0,\n                MAX + HALF_WIDTH - startPos,\n                MAX + HALF_WIDTH - startPos + Number.MIN_VALUE,\n                TOTAL_WIDTH,\n            ];\n\n            const outputRange = [\n                startPos,\n                MAX + HALF_WIDTH - Number.MIN_VALUE,\n                MIN - HALF_WIDTH,\n                startPos,\n                MAX + HALF_WIDTH,\n                MIN - HALF_WIDTH + Number.MIN_VALUE,\n                startPos,\n            ];\n\n            return interpolate(\n                handlerOffsetX.value,\n                inputRange,\n                outputRange,\n                Extrapolate.CLAMP\n            );\n        }\n\n        return handlerOffsetX.value + size * index;\n    }, [loop, data, viewCount, type, size, visibleRanges]);\n\n    return x;\n};\n","import React from 'react';\n\ninterface Props {\n    shouldUpdate: boolean;\n}\n\nexport const LazyView: React.FC<Props> = (props) => {\n    const { shouldUpdate, children } = props;\n\n    if (!shouldUpdate) {\n        return <></>;\n    }\n\n    return <>{children}</>;\n};\n","import React from 'react';\nimport { View, Button, ButtonProps, Text } from 'react-native-ui-lib';\n\nexport interface ISButtonProps {\n    visible?: boolean;\n}\n\nconst SButton: React.FC<ISButtonProps & ButtonProps> = (props) => {\n    const { children, visible = true } = props;\n\n    if (!visible) {\n        return <></>;\n    }\n\n    return (\n        <View row centerH>\n            <Button {...props} marginT-20 backgroundColor=\"#26292E\">\n                <Text color=\"white\">{children}</Text>\n            </Button>\n        </View>\n    );\n};\n\nexport default SButton;\n","import { interpolate } from 'react-native-reanimated';\n\nexport function normalLayout(opts: { size: number; vertical: boolean }) {\n    const { size, vertical } = opts;\n\n    return (value: number) => {\n        'worklet';\n        const translate = interpolate(value, [-1, 0, 1], [-size, 0, size]);\n\n        return {\n            transform: [\n                vertical\n                    ? {\n                          translateY: translate,\n                      }\n                    : {\n                          translateX: translate,\n                      },\n            ],\n        };\n    };\n}\n","import { Extrapolate, interpolate } from 'react-native-reanimated';\nimport type { ComputedDirectionTypes } from '../types';\n\ntype TBaseConfig = {\n    size: number;\n    vertical: boolean;\n};\n\ninterface ILayoutConfig {\n    /**\n     * When use default Layout props,this prop can be control prev/next item offset.\n     * @default 100\n     */\n    parallaxScrollingOffset?: number;\n    /**\n     * When use default Layout props,this prop can be control prev/next item offset.\n     * @default 0.8\n     */\n    parallaxScrollingScale?: number;\n}\n\nexport type TParallaxModeProps = ComputedDirectionTypes<{\n    /**\n     * Carousel Animated transitions.\n     */\n    mode?: 'parallax';\n    modeConfig?: ILayoutConfig;\n}>;\n\nexport function parallaxLayout(\n    baseConfig: TBaseConfig,\n    modeConfig: ILayoutConfig = {}\n) {\n    const { size, vertical } = baseConfig;\n    const { parallaxScrollingOffset = 100, parallaxScrollingScale = 0.8 } =\n        modeConfig;\n\n    return (value: number) => {\n        'worklet';\n        const translate = interpolate(\n            value,\n            [-1, 0, 1],\n            [-size + parallaxScrollingOffset, 0, size - parallaxScrollingOffset]\n        );\n\n        const zIndex = interpolate(\n            value,\n            [-1, 0, 1],\n            [0, size, 0],\n            Extrapolate.CLAMP\n        );\n\n        const scale = interpolate(\n            value,\n            [-1, 0, 1],\n            [\n                Math.pow(parallaxScrollingScale, 2),\n                parallaxScrollingScale,\n                Math.pow(parallaxScrollingScale, 2),\n            ],\n            Extrapolate.CLAMP\n        );\n\n        return {\n            transform: [\n                vertical\n                    ? {\n                          translateY: translate,\n                      }\n                    : {\n                          translateX: translate,\n                      },\n                {\n                    scale,\n                },\n            ],\n            zIndex,\n        };\n    };\n}\n","import React from 'react';\nimport { DATA_LENGTH } from '../constants';\nimport type { TCarouselProps } from '../types';\n\ntype TGetRequiredProps<P extends keyof TCarouselProps> = Record<\n    P,\n    Required<TCarouselProps>[P]\n>;\n\nexport type TInitializeCarouselProps<T> = TCarouselProps<T> &\n    TGetRequiredProps<\n        | 'defaultIndex'\n        | 'loop'\n        | 'width'\n        | 'height'\n        | 'scrollAnimationDuration'\n        | 'autoPlayInterval'\n    > & {\n        // Raw data that has not been processed\n        rawData: T[];\n    };\n\nexport function useInitProps<T>(\n    props: TCarouselProps<T>\n): TInitializeCarouselProps<T> {\n    const {\n        defaultIndex = 0,\n        data: rawData = [],\n        loop = true,\n        autoPlayInterval: _autoPlayInterval = 1000,\n        scrollAnimationDuration = 500,\n        style = {},\n        panGestureHandlerProps = {},\n        pagingEnabled = true,\n        enableSnap = true,\n        width: _width,\n        height: _height,\n    } = props;\n\n    const width = Math.round(_width || 0);\n    const height = Math.round(_height || 0);\n    const autoPlayInterval = Math.max(_autoPlayInterval, 0);\n\n    const data = React.useMemo<T[]>(() => {\n        if (!loop) return rawData;\n\n        if (rawData.length === DATA_LENGTH.SINGLE_ITEM) {\n            return [rawData[0], rawData[0], rawData[0]];\n        }\n\n        if (rawData.length === DATA_LENGTH.DOUBLE_ITEM) {\n            return [rawData[0], rawData[1], rawData[0], rawData[1]];\n        }\n\n        return rawData;\n    }, [rawData, loop]);\n\n    if (props.mode === 'vertical-stack' || props.mode === 'horizontal-stack') {\n        if (!props.modeConfig) {\n            props.modeConfig = {};\n        }\n        props.modeConfig.showLength =\n            props.modeConfig?.showLength ?? data.length - 1;\n    }\n    return {\n        ...props,\n        defaultIndex,\n        data,\n        rawData,\n        loop,\n        autoPlayInterval,\n        scrollAnimationDuration,\n        style,\n        panGestureHandlerProps,\n        pagingEnabled,\n        enableSnap,\n        width,\n        height,\n    };\n}\n","import React from 'react';\nimport Animated, { useSharedValue } from 'react-native-reanimated';\nimport type { TInitializeCarouselProps } from './useInitProps';\n\ninterface ICommonVariables {\n    size: number;\n    validLength: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n}\n\nexport function useCommonVariables(\n    props: TInitializeCarouselProps<any>\n): ICommonVariables {\n    const { vertical, height, width, data, defaultIndex } = props;\n    const size = vertical ? height : width;\n    const validLength = data.length - 1;\n    const defaultHandlerOffsetX = -Math.abs(defaultIndex * size);\n    const handlerOffsetX = useSharedValue<number>(defaultHandlerOffsetX);\n\n    React.useEffect(() => {\n        handlerOffsetX.value = defaultHandlerOffsetX;\n    }, [vertical, handlerOffsetX, defaultHandlerOffsetX]);\n\n    return {\n        size,\n        validLength,\n        handlerOffsetX,\n    };\n}\n","import Animated, {\n    runOnJS,\n    useAnimatedReaction,\n} from 'react-native-reanimated';\nimport { DATA_LENGTH } from '../constants';\nimport type { TCarouselProps } from '../types';\n\nexport function useOnProgressChange(\n    opts: {\n        size: number;\n        offsetX: Animated.SharedValue<number>;\n        rawData: TCarouselProps['data'];\n    } & Pick<TCarouselProps, 'onProgressChange'>\n) {\n    const { offsetX, rawData, size, onProgressChange } = opts;\n    useAnimatedReaction(\n        () => offsetX.value,\n        (_value) => {\n            let value = _value;\n\n            if (rawData.length === DATA_LENGTH.SINGLE_ITEM) {\n                value = value % size;\n            }\n\n            if (rawData.length === DATA_LENGTH.DOUBLE_ITEM) {\n                value = value % (size * 2);\n            }\n\n            let absoluteProgress = Math.abs(value / size);\n\n            if (value > 0) {\n                absoluteProgress = rawData.length - absoluteProgress;\n            }\n\n            !!onProgressChange &&\n                runOnJS(onProgressChange)(value, absoluteProgress);\n        },\n        [onProgressChange, rawData]\n    );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Carousel from 'react-native-reanimated-carousel';\nimport Animated, {\n    Extrapolate,\n    interpolate,\n    useAnimatedStyle,\n    useSharedValue,\n} from 'react-native-reanimated';\nimport SButton from '../components/SButton';\nimport { SBItem } from '../components/SBItem';\nimport { ElementsText, window } from '../constants';\n\nconst PAGE_WIDTH = window.width;\nconst colors = [\n    '#26292E',\n    '#899F9C',\n    '#B3C680',\n    '#5C6265',\n    '#F5D399',\n    '#F1F1F1',\n];\n\nfunction Index() {\n    const [isVertical, setIsVertical] = React.useState(false);\n    const [autoPlay, setAutoPlay] = React.useState(false);\n    const [pagingEnabled, setPagingEnabled] = React.useState<boolean>(true);\n    const [enableSnap, setEnableSnap] = React.useState<boolean>(true);\n    const progressValue = useSharedValue<number>(0);\n    const baseOptions = isVertical\n        ? ({\n              vertical: true,\n              width: PAGE_WIDTH,\n              height: PAGE_WIDTH * 0.6,\n          } as const)\n        : ({\n              vertical: false,\n              width: PAGE_WIDTH,\n              height: PAGE_WIDTH * 0.6,\n          } as const);\n\n    return (\n        <View\n            style={{\n                alignItems: 'center',\n            }}\n        >\n            <Carousel\n                {...baseOptions}\n                loop\n                pagingEnabled={pagingEnabled}\n                enableSnap={enableSnap}\n                autoPlay={autoPlay}\n                autoPlayInterval={1500}\n                onProgressChange={(_, absoluteProgress) =>\n                    (progressValue.value = absoluteProgress)\n                }\n                mode=\"parallax\"\n                modeConfig={{\n                    parallaxScrollingScale: 0.9,\n                    parallaxScrollingOffset: 50,\n                }}\n                data={colors}\n                renderItem={({ index }) => <SBItem index={index} />}\n            />\n            {!!progressValue && (\n                <View\n                    style={\n                        isVertical\n                            ? {\n                                  flexDirection: 'column',\n                                  justifyContent: 'space-between',\n                                  width: 10,\n                                  alignSelf: 'center',\n                                  position: 'absolute',\n                                  right: 5,\n                                  top: 40,\n                              }\n                            : {\n                                  flexDirection: 'row',\n                                  justifyContent: 'space-between',\n                                  width: 100,\n                                  alignSelf: 'center',\n                              }\n                    }\n                >\n                    {colors.map((backgroundColor, index) => {\n                        return (\n                            <PaginationItem\n                                backgroundColor={backgroundColor}\n                                animValue={progressValue}\n                                index={index}\n                                key={index}\n                                isRotate={isVertical}\n                                length={colors.length}\n                            />\n                        );\n                    })}\n                </View>\n            )}\n            <SButton\n                onPress={() => setAutoPlay(!autoPlay)}\n            >{`${ElementsText.AUTOPLAY}:${autoPlay}`}</SButton>\n            <SButton\n                onPress={() => {\n                    setIsVertical(!isVertical);\n                }}\n            >\n                {isVertical ? 'Set horizontal' : 'Set Vertical'}\n            </SButton>\n            <SButton\n                onPress={() => {\n                    setPagingEnabled(!pagingEnabled);\n                }}\n            >\n                {`pagingEnabled:${pagingEnabled}`}\n            </SButton>\n            <SButton\n                onPress={() => {\n                    setEnableSnap(!enableSnap);\n                }}\n            >\n                {`enableSnap:${enableSnap}`}\n            </SButton>\n        </View>\n    );\n}\n\nconst PaginationItem: React.FC<{\n    index: number;\n    backgroundColor: string;\n    length: number;\n    animValue: Animated.SharedValue<number>;\n    isRotate?: boolean;\n}> = (props) => {\n    const { animValue, index, length, backgroundColor, isRotate } = props;\n    const width = 10;\n\n    const animStyle = useAnimatedStyle(() => {\n        let inputRange = [index - 1, index, index + 1];\n        let outputRange = [-width, 0, width];\n\n        if (index === 0 && animValue?.value > length - 1) {\n            inputRange = [length - 1, length, length + 1];\n            outputRange = [-width, 0, width];\n        }\n\n        return {\n            transform: [\n                {\n                    translateX: interpolate(\n                        animValue?.value,\n                        inputRange,\n                        outputRange,\n                        Extrapolate.CLAMP\n                    ),\n                },\n            ],\n        };\n    }, [animValue, index, length]);\n    return (\n        <View\n            style={{\n                backgroundColor: 'white',\n                width,\n                height: width,\n                borderRadius: 50,\n                overflow: 'hidden',\n                transform: [\n                    {\n                        rotateZ: isRotate ? '90deg' : '0deg',\n                    },\n                ],\n            }}\n        >\n            <Animated.View\n                style={[\n                    {\n                        borderRadius: 50,\n                        backgroundColor,\n                        flex: 1,\n                    },\n                    animStyle,\n                ]}\n            />\n        </View>\n    );\n};\n\nexport default Index;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Animated, {\n    interpolate,\n    interpolateColor,\n    useAnimatedStyle,\n} from 'react-native-reanimated';\nimport Carousel from 'react-native-reanimated-carousel';\nimport type { TAnimationStyle } from '../../../src/layouts/BaseLayout';\nimport { SBItem } from '../components/SBItem';\nimport SButton from '../components/SButton';\nimport { ElementsText, window } from '../constants';\n\nconst PAGE_WIDTH = window.width;\n\nfunction Index() {\n    const [isAutoPlay, setIsAutoPlay] = React.useState(false);\n    const animationStyle: TAnimationStyle = React.useCallback(\n        (value: number) => {\n            'worklet';\n\n            const zIndex = interpolate(value, [-1, 0, 1], [10, 20, 30]);\n            const translateX = interpolate(\n                value,\n                [-2, 0, 1],\n                [-PAGE_WIDTH, 0, PAGE_WIDTH]\n            );\n\n            return {\n                transform: [{ translateX }],\n                zIndex,\n            };\n        },\n        []\n    );\n\n    return (\n        <View style={{ flex: 1 }}>\n            <Carousel\n                loop={true}\n                autoPlay={isAutoPlay}\n                style={{ width: PAGE_WIDTH, height: 240 }}\n                width={PAGE_WIDTH}\n                data={[...new Array(6).keys()]}\n                renderItem={({ index, animationValue }) => {\n                    return (\n                        <CustomItem\n                            key={index}\n                            index={index}\n                            animationValue={animationValue}\n                        />\n                    );\n                }}\n                customAnimation={animationStyle}\n                scrollAnimationDuration={1200}\n            />\n            <SButton\n                onPress={() => {\n                    setIsAutoPlay(!isAutoPlay);\n                }}\n            >\n                {ElementsText.AUTOPLAY}:{`${isAutoPlay}`}\n            </SButton>\n        </View>\n    );\n}\n\ninterface ItemProps {\n    index: number;\n    animationValue: Animated.SharedValue<number>;\n}\nconst CustomItem: React.FC<ItemProps> = ({ index, animationValue }) => {\n    const maskStyle = useAnimatedStyle(() => {\n        const backgroundColor = interpolateColor(\n            animationValue.value,\n            [-1, 0, 1],\n            ['#000000dd', 'transparent', '#000000dd']\n        );\n\n        return {\n            backgroundColor,\n        };\n    }, [animationValue]);\n\n    return (\n        <View style={{ flex: 1 }}>\n            <SBItem key={index} index={index} style={{ borderRadius: 0 }} />\n            <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                    {\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                    },\n                    maskStyle,\n                ]}\n            />\n        </View>\n    );\n};\n\nexport default Index;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport Animated, {\n    interpolate,\n    interpolateColor,\n    useAnimatedStyle,\n} from 'react-native-reanimated';\nimport Carousel from 'react-native-reanimated-carousel';\nimport type { TAnimationStyle } from '../../../src/layouts/BaseLayout';\nimport { SBItem } from '../components/SBItem';\nimport SButton from '../components/SButton';\nimport { ElementsText, window } from '../constants';\n\nconst PAGE_WIDTH = window.width;\n\nfunction Index() {\n    const [isAutoPlay, setIsAutoPlay] = React.useState(false);\n    const animationStyle: TAnimationStyle = React.useCallback(\n        (value: number) => {\n            'worklet';\n\n            const zIndex = interpolate(value, [-1, 0, 1], [-1000, 0, 1000]);\n            const translateX = interpolate(\n                value,\n                [-1, 0, 1],\n                [0, 0, PAGE_WIDTH]\n            );\n\n            return {\n                transform: [{ translateX }],\n                zIndex,\n            };\n        },\n        []\n    );\n\n    return (\n        <View style={{ flex: 1 }}>\n            <Carousel\n                loop={true}\n                autoPlay={isAutoPlay}\n                style={{ width: PAGE_WIDTH, height: 240 }}\n                width={PAGE_WIDTH}\n                data={[...new Array(6).keys()]}\n                renderItem={({ index, animationValue }) => {\n                    return (\n                        <CustomItem\n                            key={index}\n                            index={index}\n                            animationValue={animationValue}\n                        />\n                    );\n                }}\n                customAnimation={animationStyle}\n                scrollAnimationDuration={1200}\n            />\n            <SButton\n                onPress={() => {\n                    setIsAutoPlay(!isAutoPlay);\n                }}\n            >\n                {ElementsText.AUTOPLAY}:{`${isAutoPlay}`}\n            </SButton>\n        </View>\n    );\n}\n\ninterface ItemProps {\n    index: number;\n    animationValue: Animated.SharedValue<number>;\n}\nconst CustomItem: React.FC<ItemProps> = ({ index, animationValue }) => {\n    const maskStyle = useAnimatedStyle(() => {\n        const backgroundColor = interpolateColor(\n            animationValue.value,\n            [-1, 0, 1],\n            ['#000000dd', 'transparent', '#000000dd']\n        );\n\n        return {\n            backgroundColor,\n        };\n    }, [animationValue]);\n\n    return (\n        <View style={{ flex: 1 }}>\n            <SBItem key={index} index={index} style={{ borderRadius: 0 }} />\n            <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                    {\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                    },\n                    maskStyle,\n                ]}\n            />\n        </View>\n    );\n};\n\nexport default Index;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { interpolate } from 'react-native-reanimated';\nimport Carousel from 'react-native-reanimated-carousel';\nimport type { TAnimationStyle } from '../../../src/layouts/BaseLayout';\nimport { SBItem } from '../components/SBItem';\nimport { window } from '../constants';\n\nconst PAGE_WIDTH = window.width;\n\nfunction Index() {\n    const animationStyle: TAnimationStyle = React.useCallback(\n        (value: number) => {\n            'worklet';\n\n            const zIndex = interpolate(value, [-1, 0, 1], [10, 20, 30]);\n            const scale = interpolate(value, [-1, 0, 1], [1.25, 1, 0.25]);\n            const opacity = interpolate(value, [-0.75, 0, 1], [0, 1, 0]);\n\n            return {\n                transform: [{ scale }],\n                zIndex,\n                opacity,\n            };\n        },\n        []\n    );\n\n    return (\n        <View style={{ flex: 1 }}>\n            <Carousel\n                loop\n                style={{\n                    width: PAGE_WIDTH,\n                    height: 240,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n                width={PAGE_WIDTH * 0.7}\n                height={240 * 0.7}\n                data={[...new Array(6).keys()]}\n                renderItem={({ index }) => {\n                    return <SBItem key={index} index={index} />;\n                }}\n                customAnimation={animationStyle}\n            />\n        </View>\n    );\n}\n\nexport default Index;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { interpolate } from 'react-native-reanimated';\nimport Carousel from 'react-native-reanimated-carousel';\nimport type { TAnimationStyle } from '../../../src/layouts/BaseLayout';\nimport { SBItem } from '../components/SBItem';\nimport { ElementsText, window } from '../constants';\nimport { useToggleButton } from '../hooks/useToggleButton';\n\nconst scale = 0.7;\nconst PAGE_WIDTH = window.width * scale;\nconst PAGE_HEIGHT = 240 * scale;\n\nfunction Index() {\n    const AutoPLay = useToggleButton({\n        defaultValue: false,\n        buttonTitle: ElementsText.AUTOPLAY,\n    });\n\n    const animationStyle: TAnimationStyle = React.useCallback(\n        (value: number) => {\n            'worklet';\n\n            const zIndex = interpolate(value, [-1, 0, 1], [10, 20, 30]);\n            const rotateZ = `${interpolate(\n                value,\n                [-1, 0, 1],\n                [-45, 0, 45]\n            )}deg`;\n            const translateX = interpolate(\n                value,\n                [-1, 0, 1],\n                [-window.width, 0, window.width]\n            );\n\n            return {\n                transform: [{ rotateZ }, { translateX }],\n                zIndex,\n            };\n        },\n        []\n    );\n\n    return (\n        <View style={{ flex: 1 }}>\n            <Carousel\n                loop\n                style={{\n                    width: window.width,\n                    height: 240,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n                width={PAGE_WIDTH}\n                height={PAGE_HEIGHT}\n                data={[...new Array(6).keys()]}\n                renderItem={({ index }) => {\n                    return <SBItem key={index} index={index} />;\n                }}\n                autoPlay={AutoPLay.status}\n                customAnimation={animationStyle}\n            />\n            {AutoPLay.button}\n        </View>\n    );\n}\n\nexport default Index;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { interpolate } from 'react-native-reanimated';\nimport Carousel from 'react-native-reanimated-carousel';\nimport type { TAnimationStyle } from '../../../src/layouts/BaseLayout';\nimport { SBItem } from '../components/SBItem';\nimport { ElementsText, window } from '../constants';\nimport { useToggleButton } from '../hooks/useToggleButton';\n\nconst scale = 0.8;\nconst PAGE_WIDTH = window.width * scale;\nconst PAGE_HEIGHT = 240 * scale;\n\nfunction Index() {\n    const AutoPLay = useToggleButton({\n        defaultValue: false,\n        buttonTitle: ElementsText.AUTOPLAY,\n    });\n\n    const animationStyle: TAnimationStyle = React.useCallback(\n        (value: number) => {\n            'worklet';\n\n            const zIndex = interpolate(value, [-1, 0, 1], [10, 20, 30]);\n            const scale = interpolate(value, [-1, 0, 1], [1.25, 1, 0.25]);\n            const rotateZ = `${interpolate(\n                value,\n                [-1, 0, 1],\n                [-45, 0, 45]\n            )}deg`;\n            const translateX = interpolate(\n                value,\n                [-1, 0, 1],\n                [-PAGE_WIDTH, 0, PAGE_WIDTH]\n            );\n            const opacity = interpolate(value, [-0.75, 0, 1], [0, 1, 0]);\n\n            return {\n                transform: [{ scale }, { rotateZ }, { translateX }],\n                zIndex,\n                opacity,\n            };\n        },\n        []\n    );\n\n    return (\n        <View style={{ flex: 1 }}>\n            <Carousel\n                loop\n                style={{\n                    width: window.width,\n                    height: 240,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n                width={PAGE_WIDTH}\n                height={PAGE_HEIGHT}\n                data={[...new Array(6).keys()]}\n                renderItem={({ index }) => {\n                    return <SBItem key={index} index={index} />;\n                }}\n                autoPlay={AutoPLay.status}\n                customAnimation={animationStyle}\n            />\n            {AutoPLay.button}\n        </View>\n    );\n}\n\nexport default Index;\n","import * as React from 'react';\nimport { Pressable } from 'react-native';\nimport Animated, {\n    Extrapolate,\n    interpolate,\n    interpolateColor,\n    useAnimatedStyle,\n    useSharedValue,\n    withTiming,\n} from 'react-native-reanimated';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { Colors, View } from 'react-native-ui-lib';\nimport SButton from '../components/SButton';\nimport { ElementsText, window } from '../constants';\nimport { useToggleButton } from '../hooks/useToggleButton';\n\nconst PAGE_WIDTH = 60;\nconst PAGE_HEIGHT = 40;\nconst DATA = ['周一', '周二', '周三', '周四', '周五', '周六', '周日'];\n\nfunction Index() {\n    const r = React.useRef<ICarouselInstance>(null);\n    const AutoPLay = useToggleButton({\n        defaultValue: false,\n        buttonTitle: ElementsText.AUTOPLAY,\n    });\n    const [loop, setLoop] = React.useState(false);\n\n    return (\n        <View style={{ flex: 1 }}>\n            <View style={{ marginVertical: 100 }}>\n                <Carousel\n                    key={`${loop}`}\n                    ref={r}\n                    loop={loop}\n                    style={{\n                        width: window.width,\n                        height: PAGE_HEIGHT,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        borderBottomWidth: 1,\n                        borderBottomColor: Colors.blue30,\n                    }}\n                    width={PAGE_WIDTH}\n                    height={PAGE_HEIGHT}\n                    data={DATA}\n                    renderItem={({ item, animationValue }) => {\n                        return (\n                            <Item\n                                animationValue={animationValue}\n                                label={item}\n                                onPress={() =>\n                                    r.current?.scrollTo({\n                                        count: animationValue.value,\n                                        animated: true,\n                                    })\n                                }\n                            />\n                        );\n                    }}\n                    autoPlay={AutoPLay.status}\n                />\n            </View>\n            {AutoPLay.button}\n            <SButton onPress={() => setLoop(!loop)}>{`Loop: ${loop}`}</SButton>\n            <View\n                style={{\n                    marginTop: 24,\n                    flexDirection: 'row',\n                    justifyContent: 'space-evenly',\n                }}\n            >\n                <SButton onPress={() => r.current?.prev()}>{'Prev'}</SButton>\n                <SButton onPress={() => r.current?.next()}>{'Next'}</SButton>\n            </View>\n        </View>\n    );\n}\n\nexport default Index;\n\ninterface Props {\n    animationValue: Animated.SharedValue<number>;\n    label: string;\n    onPress?: () => void;\n}\n\nconst Item: React.FC<Props> = (props) => {\n    const { animationValue, label, onPress } = props;\n\n    const translateY = useSharedValue(0);\n\n    const containerStyle = useAnimatedStyle(() => {\n        const opacity = interpolate(\n            animationValue.value,\n            [-1, 0, 1],\n            [0.5, 1, 0.5],\n            Extrapolate.CLAMP\n        );\n\n        return {\n            opacity,\n        };\n    }, [animationValue]);\n\n    const labelStyle = useAnimatedStyle(() => {\n        const scale = interpolate(\n            animationValue.value,\n            [-1, 0, 1],\n            [1, 1.25, 1],\n            Extrapolate.CLAMP\n        );\n\n        const color = interpolateColor(\n            animationValue.value,\n            [-1, 0, 1],\n            [Colors.grey30, Colors.blue30, Colors.grey30]\n        );\n\n        return {\n            transform: [{ scale }, { translateY: translateY.value }],\n            color,\n        };\n    }, [animationValue, translateY]);\n\n    const onPressIn = React.useCallback(() => {\n        translateY.value = withTiming(-8, { duration: 250 });\n    }, [translateY]);\n\n    const onPressOut = React.useCallback(() => {\n        translateY.value = withTiming(0, { duration: 250 });\n    }, [translateY]);\n\n    return (\n        <Pressable\n            onPress={onPress}\n            onPressIn={onPressIn}\n            onPressOut={onPressOut}\n        >\n            <Animated.View\n                style={[\n                    {\n                        height: '100%',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    },\n                    containerStyle,\n                ]}\n            >\n                <Animated.Text\n                    style={[{ fontSize: 18, color: '#26292E' }, labelStyle]}\n                >\n                    {label}\n                </Animated.Text>\n            </Animated.View>\n        </Pressable>\n    );\n};\n","import { normalLayout } from './normal';\nimport { parallaxLayout } from './parallax';\nimport { horizontalStackLayout, verticalStackLayout } from './stack';\n\nexport type TMode = 'parallax' | 'horizontal-stack' | 'vertical-stack';\n\nexport const Layouts = {\n    normal: normalLayout,\n    parallax: parallaxLayout,\n    horizontalStack: horizontalStackLayout,\n    verticalStack: verticalStackLayout,\n};\n","import React from 'react';\nimport type { TAnimationStyle } from 'src/layouts/BaseLayout';\nimport { Layouts } from '../layouts';\nimport type { TInitializeCarouselProps } from './useInitProps';\n\ntype TLayoutConfigOpts<T> = TInitializeCarouselProps<T> & { size: number };\n\nexport function useLayoutConfig<T>(\n    opts: TLayoutConfigOpts<T>\n): TAnimationStyle {\n    const { size, vertical } = opts as Required<TLayoutConfigOpts<T>>;\n\n    return React.useMemo(() => {\n        const baseConfig = { size, vertical };\n        switch (opts.mode) {\n            case 'parallax':\n                return Layouts.parallax(baseConfig, opts.modeConfig);\n            case 'horizontal-stack':\n                return Layouts.horizontalStack(opts.modeConfig);\n            case 'vertical-stack':\n                return Layouts.verticalStack(opts.modeConfig);\n            default:\n                return Layouts.normal(baseConfig);\n        }\n    }, [opts.mode, opts.modeConfig, size, vertical]);\n}\n","var map = {\n\t\"./af\": 329,\n\t\"./af.js\": 329,\n\t\"./ar\": 330,\n\t\"./ar-dz\": 331,\n\t\"./ar-dz.js\": 331,\n\t\"./ar-kw\": 332,\n\t\"./ar-kw.js\": 332,\n\t\"./ar-ly\": 333,\n\t\"./ar-ly.js\": 333,\n\t\"./ar-ma\": 334,\n\t\"./ar-ma.js\": 334,\n\t\"./ar-sa\": 335,\n\t\"./ar-sa.js\": 335,\n\t\"./ar-tn\": 336,\n\t\"./ar-tn.js\": 336,\n\t\"./ar.js\": 330,\n\t\"./az\": 337,\n\t\"./az.js\": 337,\n\t\"./be\": 338,\n\t\"./be.js\": 338,\n\t\"./bg\": 339,\n\t\"./bg.js\": 339,\n\t\"./bm\": 340,\n\t\"./bm.js\": 340,\n\t\"./bn\": 341,\n\t\"./bn-bd\": 342,\n\t\"./bn-bd.js\": 342,\n\t\"./bn.js\": 341,\n\t\"./bo\": 343,\n\t\"./bo.js\": 343,\n\t\"./br\": 344,\n\t\"./br.js\": 344,\n\t\"./bs\": 345,\n\t\"./bs.js\": 345,\n\t\"./ca\": 346,\n\t\"./ca.js\": 346,\n\t\"./cs\": 347,\n\t\"./cs.js\": 347,\n\t\"./cv\": 348,\n\t\"./cv.js\": 348,\n\t\"./cy\": 349,\n\t\"./cy.js\": 349,\n\t\"./da\": 350,\n\t\"./da.js\": 350,\n\t\"./de\": 351,\n\t\"./de-at\": 352,\n\t\"./de-at.js\": 352,\n\t\"./de-ch\": 353,\n\t\"./de-ch.js\": 353,\n\t\"./de.js\": 351,\n\t\"./dv\": 354,\n\t\"./dv.js\": 354,\n\t\"./el\": 355,\n\t\"./el.js\": 355,\n\t\"./en-au\": 356,\n\t\"./en-au.js\": 356,\n\t\"./en-ca\": 357,\n\t\"./en-ca.js\": 357,\n\t\"./en-gb\": 358,\n\t\"./en-gb.js\": 358,\n\t\"./en-ie\": 359,\n\t\"./en-ie.js\": 359,\n\t\"./en-il\": 360,\n\t\"./en-il.js\": 360,\n\t\"./en-in\": 361,\n\t\"./en-in.js\": 361,\n\t\"./en-nz\": 362,\n\t\"./en-nz.js\": 362,\n\t\"./en-sg\": 363,\n\t\"./en-sg.js\": 363,\n\t\"./eo\": 364,\n\t\"./eo.js\": 364,\n\t\"./es\": 365,\n\t\"./es-do\": 366,\n\t\"./es-do.js\": 366,\n\t\"./es-mx\": 367,\n\t\"./es-mx.js\": 367,\n\t\"./es-us\": 368,\n\t\"./es-us.js\": 368,\n\t\"./es.js\": 365,\n\t\"./et\": 369,\n\t\"./et.js\": 369,\n\t\"./eu\": 370,\n\t\"./eu.js\": 370,\n\t\"./fa\": 371,\n\t\"./fa.js\": 371,\n\t\"./fi\": 372,\n\t\"./fi.js\": 372,\n\t\"./fil\": 373,\n\t\"./fil.js\": 373,\n\t\"./fo\": 374,\n\t\"./fo.js\": 374,\n\t\"./fr\": 375,\n\t\"./fr-ca\": 376,\n\t\"./fr-ca.js\": 376,\n\t\"./fr-ch\": 377,\n\t\"./fr-ch.js\": 377,\n\t\"./fr.js\": 375,\n\t\"./fy\": 378,\n\t\"./fy.js\": 378,\n\t\"./ga\": 379,\n\t\"./ga.js\": 379,\n\t\"./gd\": 380,\n\t\"./gd.js\": 380,\n\t\"./gl\": 381,\n\t\"./gl.js\": 381,\n\t\"./gom-deva\": 382,\n\t\"./gom-deva.js\": 382,\n\t\"./gom-latn\": 383,\n\t\"./gom-latn.js\": 383,\n\t\"./gu\": 384,\n\t\"./gu.js\": 384,\n\t\"./he\": 385,\n\t\"./he.js\": 385,\n\t\"./hi\": 386,\n\t\"./hi.js\": 386,\n\t\"./hr\": 387,\n\t\"./hr.js\": 387,\n\t\"./hu\": 388,\n\t\"./hu.js\": 388,\n\t\"./hy-am\": 389,\n\t\"./hy-am.js\": 389,\n\t\"./id\": 390,\n\t\"./id.js\": 390,\n\t\"./is\": 391,\n\t\"./is.js\": 391,\n\t\"./it\": 392,\n\t\"./it-ch\": 393,\n\t\"./it-ch.js\": 393,\n\t\"./it.js\": 392,\n\t\"./ja\": 394,\n\t\"./ja.js\": 394,\n\t\"./jv\": 395,\n\t\"./jv.js\": 395,\n\t\"./ka\": 396,\n\t\"./ka.js\": 396,\n\t\"./kk\": 397,\n\t\"./kk.js\": 397,\n\t\"./km\": 398,\n\t\"./km.js\": 398,\n\t\"./kn\": 399,\n\t\"./kn.js\": 399,\n\t\"./ko\": 400,\n\t\"./ko.js\": 400,\n\t\"./ku\": 401,\n\t\"./ku.js\": 401,\n\t\"./ky\": 402,\n\t\"./ky.js\": 402,\n\t\"./lb\": 403,\n\t\"./lb.js\": 403,\n\t\"./lo\": 404,\n\t\"./lo.js\": 404,\n\t\"./lt\": 405,\n\t\"./lt.js\": 405,\n\t\"./lv\": 406,\n\t\"./lv.js\": 406,\n\t\"./me\": 407,\n\t\"./me.js\": 407,\n\t\"./mi\": 408,\n\t\"./mi.js\": 408,\n\t\"./mk\": 409,\n\t\"./mk.js\": 409,\n\t\"./ml\": 410,\n\t\"./ml.js\": 410,\n\t\"./mn\": 411,\n\t\"./mn.js\": 411,\n\t\"./mr\": 412,\n\t\"./mr.js\": 412,\n\t\"./ms\": 413,\n\t\"./ms-my\": 414,\n\t\"./ms-my.js\": 414,\n\t\"./ms.js\": 413,\n\t\"./mt\": 415,\n\t\"./mt.js\": 415,\n\t\"./my\": 416,\n\t\"./my.js\": 416,\n\t\"./nb\": 417,\n\t\"./nb.js\": 417,\n\t\"./ne\": 418,\n\t\"./ne.js\": 418,\n\t\"./nl\": 419,\n\t\"./nl-be\": 420,\n\t\"./nl-be.js\": 420,\n\t\"./nl.js\": 419,\n\t\"./nn\": 421,\n\t\"./nn.js\": 421,\n\t\"./oc-lnc\": 422,\n\t\"./oc-lnc.js\": 422,\n\t\"./pa-in\": 423,\n\t\"./pa-in.js\": 423,\n\t\"./pl\": 424,\n\t\"./pl.js\": 424,\n\t\"./pt\": 425,\n\t\"./pt-br\": 426,\n\t\"./pt-br.js\": 426,\n\t\"./pt.js\": 425,\n\t\"./ro\": 427,\n\t\"./ro.js\": 427,\n\t\"./ru\": 428,\n\t\"./ru.js\": 428,\n\t\"./sd\": 429,\n\t\"./sd.js\": 429,\n\t\"./se\": 430,\n\t\"./se.js\": 430,\n\t\"./si\": 431,\n\t\"./si.js\": 431,\n\t\"./sk\": 432,\n\t\"./sk.js\": 432,\n\t\"./sl\": 433,\n\t\"./sl.js\": 433,\n\t\"./sq\": 434,\n\t\"./sq.js\": 434,\n\t\"./sr\": 435,\n\t\"./sr-cyrl\": 436,\n\t\"./sr-cyrl.js\": 436,\n\t\"./sr.js\": 435,\n\t\"./ss\": 437,\n\t\"./ss.js\": 437,\n\t\"./sv\": 438,\n\t\"./sv.js\": 438,\n\t\"./sw\": 439,\n\t\"./sw.js\": 439,\n\t\"./ta\": 440,\n\t\"./ta.js\": 440,\n\t\"./te\": 441,\n\t\"./te.js\": 441,\n\t\"./tet\": 442,\n\t\"./tet.js\": 442,\n\t\"./tg\": 443,\n\t\"./tg.js\": 443,\n\t\"./th\": 444,\n\t\"./th.js\": 444,\n\t\"./tk\": 445,\n\t\"./tk.js\": 445,\n\t\"./tl-ph\": 446,\n\t\"./tl-ph.js\": 446,\n\t\"./tlh\": 447,\n\t\"./tlh.js\": 447,\n\t\"./tr\": 448,\n\t\"./tr.js\": 448,\n\t\"./tzl\": 449,\n\t\"./tzl.js\": 449,\n\t\"./tzm\": 450,\n\t\"./tzm-latn\": 451,\n\t\"./tzm-latn.js\": 451,\n\t\"./tzm.js\": 450,\n\t\"./ug-cn\": 452,\n\t\"./ug-cn.js\": 452,\n\t\"./uk\": 453,\n\t\"./uk.js\": 453,\n\t\"./ur\": 454,\n\t\"./ur.js\": 454,\n\t\"./uz\": 455,\n\t\"./uz-latn\": 456,\n\t\"./uz-latn.js\": 456,\n\t\"./uz.js\": 455,\n\t\"./vi\": 457,\n\t\"./vi.js\": 457,\n\t\"./x-pseudo\": 458,\n\t\"./x-pseudo.js\": 458,\n\t\"./yo\": 459,\n\t\"./yo.js\": 459,\n\t\"./zh-cn\": 460,\n\t\"./zh-cn.js\": 460,\n\t\"./zh-hk\": 461,\n\t\"./zh-hk.js\": 461,\n\t\"./zh-mo\": 462,\n\t\"./zh-mo.js\": 462,\n\t\"./zh-tw\": 463,\n\t\"./zh-tw.js\": 463\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 662;","module.exports = __webpack_public_path__ + \"static/media/web-example-qrcode.0190b8c9.png\";","import * as React from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    TouchableHighlight,\n} from 'react-native';\nimport { useNavigation, NavigationProp } from '@react-navigation/native';\nimport type { RootStackParamList } from '../index';\nimport { Colors } from 'react-native-ui-lib';\nimport { isAndroid, isIos } from '../utils';\n\nconst LayoutsPage: Array<Record<'name', keyof RootStackParamList>> = [\n    {\n        name: 'Normal',\n    },\n    {\n        name: 'Parallax',\n    },\n    {\n        name: 'Stack',\n    },\n];\n\nconst CustomAnimations: Array<Record<'name', keyof RootStackParamList>> = [\n    {\n        name: 'AdvancedParallax',\n    },\n    {\n        name: 'PauseAdvancedParallax',\n    },\n    {\n        name: 'ScaleFadeInOut',\n    },\n    {\n        name: 'RotateInOut',\n    },\n    {\n        name: 'RotateScaleFadeInOut',\n    },\n    {\n        name: 'AnimTabBar',\n    },\n];\n\nconst OtherPage: Array<Record<'name', keyof RootStackParamList>> = [\n    {\n        name: 'Complex',\n    },\n];\n\nif (isIos || isAndroid) {\n    OtherPage.push(\n        {\n            name: 'SnapCarouselComplex',\n        },\n        {\n            name: 'SnapCarouselLoop',\n        }\n    );\n}\n\nconst Index = () => {\n    const navigation = useNavigation<NavigationProp<RootStackParamList>>();\n    return (\n        <ScrollView\n            style={{ flex: 1 }}\n            stickyHeaderIndices={[\n                0,\n                LayoutsPage.length + 1,\n                LayoutsPage.length + CustomAnimations.length + 2,\n            ]}\n        >\n            <View style={styles.section}>\n                <Text style={styles.sectionText}>{'Layouts'}</Text>\n            </View>\n            {LayoutsPage.map(({ name }, index) => {\n                return (\n                    <TouchableHighlight\n                        key={index}\n                        onPress={() => navigation.navigate(name)}\n                    >\n                        <View style={styles.listItem}>\n                            <Text style={styles.text}>{name}</Text>\n                        </View>\n                    </TouchableHighlight>\n                );\n            })}\n            <View style={styles.section}>\n                <Text style={styles.sectionText}>{'CustomAnimations'}</Text>\n            </View>\n            {CustomAnimations.map(({ name }, index) => {\n                return (\n                    <TouchableHighlight\n                        key={index}\n                        onPress={() => navigation.navigate(name)}\n                    >\n                        <View style={styles.listItem}>\n                            <Text style={styles.text}>{name}</Text>\n                        </View>\n                    </TouchableHighlight>\n                );\n            })}\n            <View style={styles.section}>\n                <Text style={styles.sectionText}>{'Others'}</Text>\n            </View>\n            {OtherPage.map(({ name }, index) => {\n                return (\n                    <TouchableHighlight\n                        key={index}\n                        onPress={() => navigation.navigate(name)}\n                    >\n                        <View style={styles.listItem}>\n                            <Text style={styles.text}>{name}</Text>\n                        </View>\n                    </TouchableHighlight>\n                );\n            })}\n        </ScrollView>\n    );\n};\n\nexport default Index;\n\nconst styles = StyleSheet.create({\n    listItem: {\n        alignItems: 'flex-start',\n        borderColor: Colors.grey60,\n        borderBottomWidth: 0.5,\n        padding: 16,\n        backgroundColor: '#fff',\n    },\n    text: {\n        fontSize: 16,\n    },\n    section: {\n        flexDirection: 'row',\n        paddingHorizontal: 16,\n        paddingVertical: 8,\n        backgroundColor: Colors.grey60,\n    },\n    sectionText: {\n        fontSize: 14,\n        fontWeight: 'bold',\n    },\n});\n","import * as React from 'react';\nimport { View } from 'react-native-ui-lib';\nimport Carousel from 'react-native-reanimated-carousel';\nimport { SBItem } from '../components/SBItem';\nimport SButton from '../components/SButton';\nimport { ElementsText, window } from '../constants';\n\nconst PAGE_WIDTH = window.width;\n\nfunction Index() {\n    const [isVertical, setIsVertical] = React.useState(false);\n    const [isFast, setIsFast] = React.useState(false);\n    const [isAutoPlay, setIsAutoPlay] = React.useState(false);\n\n    const baseOptions = isVertical\n        ? ({\n              vertical: true,\n              width: PAGE_WIDTH,\n              height: PAGE_WIDTH / 2,\n          } as const)\n        : ({\n              vertical: false,\n              width: PAGE_WIDTH,\n              height: PAGE_WIDTH / 2,\n          } as const);\n\n    return (\n        <View style={{ flex: 1 }}>\n            <Carousel\n                {...baseOptions}\n                loop\n                autoPlay={isAutoPlay}\n                autoPlayInterval={isFast ? 100 : 2000}\n                data={[...new Array(6).keys()]}\n                renderItem={({ index }) => <SBItem key={index} index={index} />}\n            />\n            <SButton\n                onPress={() => {\n                    setIsVertical(!isVertical);\n                }}\n            >\n                {isVertical ? 'Set horizontal' : 'Set Vertical'}\n            </SButton>\n            <SButton\n                onPress={() => {\n                    setIsFast(!isFast);\n                }}\n            >\n                {isFast ? 'NORMAL' : 'FAST'}\n            </SButton>\n            <SButton\n                onPress={() => {\n                    setIsAutoPlay(!isAutoPlay);\n                }}\n            >\n                {ElementsText.AUTOPLAY}:{`${isAutoPlay}`}\n            </SButton>\n        </View>\n    );\n}\n\nexport default Index;\n","import * as React from 'react';\nimport { View } from 'react-native-ui-lib';\nimport Carousel from 'react-native-reanimated-carousel';\nimport { SBItem } from '../components/SBItem';\nimport SButton from '../components/SButton';\nimport { ElementsText } from '../constants';\n\nfunction Index() {\n    const [mode, setMode] = React.useState<any>('horizontal-stack');\n    const [snapDirection, setSnapDirection] = React.useState<'left' | 'right'>(\n        'left'\n    );\n    const [pagingEnabled, setPagingEnabled] = React.useState<boolean>(true);\n    const [enableSnap, setEnableSnap] = React.useState<boolean>(true);\n    const [loop, setLoop] = React.useState<boolean>(true);\n    const [autoPlay, setAutoPlay] = React.useState<boolean>(false);\n    const [autoPlayReverse, setAutoPlayReverse] =\n        React.useState<boolean>(false);\n\n    return (\n        <View style={{ flex: 1 }}>\n            <Carousel\n                style={{\n                    width: '100%',\n                    height: 240,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n                width={280}\n                height={210}\n                pagingEnabled={pagingEnabled}\n                enableSnap={enableSnap}\n                mode={mode}\n                loop={loop}\n                autoPlay={autoPlay}\n                autoPlayReverse={autoPlayReverse}\n                data={[...new Array(6).keys()]}\n                modeConfig={{\n                    snapDirection,\n                    stackInterval: mode === 'vertical-stack' ? 8 : 18,\n                }}\n                renderItem={({ index }) => <SBItem index={index} key={index} />}\n            />\n            <View\n                style={{\n                    flexDirection: 'row',\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-evenly',\n                }}\n            >\n                <SButton\n                    onPress={() => {\n                        setMode('horizontal-stack');\n                    }}\n                >\n                    {'horizontal-stack'}\n                </SButton>\n                <SButton\n                    onPress={() => {\n                        setMode('vertical-stack');\n                    }}\n                >\n                    {'vertical-stack'}\n                </SButton>\n                <SButton\n                    onPress={() => {\n                        setAutoPlay(!autoPlay);\n                    }}\n                >\n                    {`${ElementsText.AUTOPLAY}:${autoPlay}`}\n                </SButton>\n                <SButton\n                    onPress={() => {\n                        setAutoPlayReverse(!autoPlayReverse);\n                    }}\n                >\n                    {`autoPlayReverse:${autoPlayReverse}`}\n                </SButton>\n                <SButton\n                    onPress={() => {\n                        setLoop(!loop);\n                    }}\n                >\n                    {`loop:${loop}`}\n                </SButton>\n                <SButton\n                    onPress={() => {\n                        setSnapDirection(\n                            snapDirection === 'left' ? 'right' : 'left'\n                        );\n                    }}\n                >\n                    {snapDirection}\n                </SButton>\n                <SButton\n                    onPress={() => {\n                        setPagingEnabled(!pagingEnabled);\n                    }}\n                >\n                    {`pagingEnabled:${pagingEnabled}`}\n                </SButton>\n                <SButton\n                    onPress={() => {\n                        setEnableSnap(!enableSnap);\n                    }}\n                >\n                    {`enableSnap:${enableSnap}`}\n                </SButton>\n            </View>\n        </View>\n    );\n}\n\nexport default Index;\n","import * as React from 'react';\nimport { ScrollView, Text, View } from 'react-native';\nimport Carousel from 'react-native-reanimated-carousel';\nimport type { ICarouselInstance } from '../../../src/types';\nimport SButton from '../components/SButton';\nimport { window } from '../constants';\n\nconst PAGE_WIDTH = window.width;\n\nfunction Index() {\n    const r = React.useRef<ICarouselInstance | null>(null);\n\n    return (\n        <View\n            style={{\n                flex: 1,\n                backgroundColor: '#f1f1f1',\n                paddingTop: 100,\n            }}\n        >\n            <View style={{ width: PAGE_WIDTH, height: 240 }}>\n                <Carousel\n                    defaultIndex={0}\n                    ref={r}\n                    width={PAGE_WIDTH}\n                    data={[...new Array(50).keys()]}\n                    mode=\"parallax\"\n                    windowSize={3}\n                    renderItem={({ index }) => (\n                        <View\n                            key={index}\n                            style={{\n                                flex: 1,\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                backgroundColor: '#ff7a45',\n                                padding: 16,\n                            }}\n                        >\n                            <Text style={{ color: 'white', fontSize: 30 }}>\n                                {`index:${index}`}\n                            </Text>\n                            <ScrollView style={{ width: '100%' }}>\n                                {new Array(100).fill(0).map((_, i) => {\n                                    return (\n                                        <View\n                                            key={i}\n                                            style={{\n                                                borderWidth: 1,\n                                                borderColor: '#0000001a',\n                                                padding: 16,\n                                            }}\n                                        >\n                                            <Text>{i}</Text>\n                                        </View>\n                                    );\n                                })}\n                            </ScrollView>\n                        </View>\n                    )}\n                />\n            </View>\n            <View\n                style={{\n                    marginTop: 24,\n                    flexDirection: 'row',\n                    justifyContent: 'space-evenly',\n                }}\n            >\n                <SButton onPress={() => r.current?.prev()}>{'Prev'}</SButton>\n                <SButton onPress={() => r.current?.next()}>{'Next'}</SButton>\n            </View>\n        </View>\n    );\n}\n\nexport default Index;\n","import * as React from 'react';\nimport { Image, StyleSheet } from 'react-native';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { Text, View } from 'react-native-ui-lib';\n\nexport const QRCode: React.FC<{ tintColor?: string }> = ({ tintColor }) => {\n    const [visible, setVisible] = React.useState(false);\n    return (\n        <TouchableWithoutFeedback\n            onPress={() => {\n                setVisible(!visible);\n            }}\n        >\n            <View>\n                <Text color={tintColor}>{'QR CODE'}</Text>\n                {visible && (\n                    <View style={styles.qrCodeContainer}>\n                        <Image\n                            // @ts-ignore\n                            style={styles.qrCodeImage}\n                            source={require('../../assets/web-example-qrcode.png')}\n                        />\n                    </View>\n                )}\n            </View>\n        </TouchableWithoutFeedback>\n    );\n};\n\nconst styles = StyleSheet.create({\n    qrCodeContainer: {\n        position: 'absolute',\n        bottom: -10,\n        // @ts-ignore\n        transform: [{ translateY: '100%' }],\n        height: 200,\n        width: 200,\n        right: 0,\n    },\n    qrCodeImage: {\n        flex: 1,\n        borderRadius: 5,\n        borderWidth: 3,\n        borderColor: '#26292E',\n    },\n});\n","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n// @ts-ignore\nimport { Restart } from 'fiction-expo-restart';\nimport { I18nManager } from 'react-native';\nimport { Text, View } from 'react-native-ui-lib';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\n\nimport Home from './home';\nimport NormalComponent from './normal';\nimport ParallaxComponent from './parallax';\nimport StackComponent from './stack';\nimport ComplexComponent from './complex';\nimport AdvancedParallaxComponent from './advanced-parallax';\nimport PauseAdvancedParallaxComponent from './pause-advanced-parallax';\nimport ScaleFadeInOutComponent from './scale-fade-in-out';\nimport RotateInOutComponent from './rotate-in-out';\nimport RotateScaleFadeInOutComponent from './rotate-scale-fade-in-out';\nimport AnimTabBarComponent from './anim-tab-bar';\nimport { isWeb } from './utils';\nimport { window } from './constants';\nimport { QRCode } from './components/QRCode';\n\n// Not support to WEB (react-native-snap-carousel)\nconst SnapCarouselComplexComponent = React.lazy(\n    () => import('./snap-carousel-complex')\n);\nconst SnapCarouselLoopComponent = React.lazy(\n    () => import('./snap-carousel-loop')\n);\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nexport type RootStackParamList = {\n    Home: undefined;\n    Normal: undefined;\n    Parallax: undefined;\n    Stack: undefined;\n\n    Complex: undefined;\n    AdvancedParallax: undefined;\n    PauseAdvancedParallax: undefined;\n    ScaleFadeInOut: undefined;\n    RotateInOut: undefined;\n    RotateScaleFadeInOut: undefined;\n    AnimTabBar: undefined;\n\n    SnapCarouselComplex: undefined;\n    SnapCarouselLoop: undefined;\n};\n\nconst WebContainer: React.FC = ({ children }) => {\n    return (\n        <View\n            style={{\n                height: '100%',\n                width: window.width,\n                alignSelf: 'center',\n            }}\n        >\n            {children}\n        </View>\n    );\n};\n\nfunction App() {\n    const [isRTL, setIsRTL] = React.useState(I18nManager.isRTL);\n\n    const app = (\n        <React.Suspense fallback={null}>\n            <View flex>\n                <NavigationContainer>\n                    <Stack.Navigator\n                        initialRouteName=\"Home\"\n                        screenOptions={{\n                            contentStyle: {\n                                flex: 1,\n                                backgroundColor: 'white',\n                            },\n                            headerRight: ({ tintColor }) => (\n                                <View row centerV>\n                                    {isWeb && (\n                                        <>\n                                            <QRCode tintColor={tintColor} />\n                                            <Text color={tintColor}> | </Text>\n                                        </>\n                                    )}\n                                    <TouchableWithoutFeedback\n                                        onPress={() => {\n                                            I18nManager.forceRTL(!isRTL);\n                                            setIsRTL(!isRTL);\n                                            Restart();\n                                        }}\n                                    >\n                                        <Text color={tintColor}>\n                                            {isRTL ? 'LTR' : 'RTL'}\n                                        </Text>\n                                    </TouchableWithoutFeedback>\n                                </View>\n                            ),\n                        }}\n                    >\n                        <Stack.Screen name=\"Home\" component={Home} />\n                        <Stack.Screen\n                            name=\"Normal\"\n                            component={NormalComponent}\n                        />\n                        <Stack.Screen\n                            name=\"Parallax\"\n                            component={ParallaxComponent}\n                        />\n                        <Stack.Screen name=\"Stack\" component={StackComponent} />\n                        <Stack.Screen\n                            name=\"Complex\"\n                            component={ComplexComponent}\n                        />\n                        <Stack.Screen\n                            name=\"AdvancedParallax\"\n                            component={AdvancedParallaxComponent}\n                        />\n                        <Stack.Screen\n                            name=\"PauseAdvancedParallax\"\n                            component={PauseAdvancedParallaxComponent}\n                        />\n                        <Stack.Screen\n                            name=\"ScaleFadeInOut\"\n                            component={ScaleFadeInOutComponent}\n                        />\n                        <Stack.Screen\n                            name=\"RotateInOut\"\n                            component={RotateInOutComponent}\n                        />\n                        <Stack.Screen\n                            name=\"RotateScaleFadeInOut\"\n                            component={RotateScaleFadeInOutComponent}\n                        />\n                        <Stack.Screen\n                            name=\"AnimTabBar\"\n                            component={AnimTabBarComponent}\n                        />\n\n                        <Stack.Screen\n                            name=\"SnapCarouselComplex\"\n                            component={SnapCarouselComplexComponent}\n                        />\n                        <Stack.Screen\n                            name=\"SnapCarouselLoop\"\n                            component={SnapCarouselLoopComponent}\n                        />\n                    </Stack.Navigator>\n                </NavigationContainer>\n            </View>\n        </React.Suspense>\n    );\n\n    if (isWeb) {\n        return <WebContainer>{app}</WebContainer>;\n    }\n\n    return app;\n}\n\nexport default App;\n","import { registerRootComponent } from 'expo';\n\nimport App from './src/index';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","export type { TCarouselProps, ICarouselInstance } from './types';\nimport Carousel from './Carousel';\n\nexport default Carousel;\n","import React from 'react';\nimport {\n    StyleSheet,\n    View,\n    Image,\n    ActivityIndicator,\n    StyleProp,\n    ViewStyle,\n} from 'react-native';\n\ninterface Props {\n    style?: StyleProp<ViewStyle>;\n}\n\nexport const SBImageItem: React.FC<Props> = ({ style }) => {\n    const uri = React.useRef(\n        `https://picsum.photos/400/300?t=${new Date().getTime()}`\n    );\n    return (\n        <View style={[styles.container, style]}>\n            <ActivityIndicator size=\"small\" />\n            <Image\n                style={styles.image}\n                source={{\n                    uri: uri.current,\n                }}\n            />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        borderRadius: 8,\n        overflow: 'hidden',\n    },\n    image: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n    },\n});\n","import React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport { Text } from 'react-native-ui-lib';\n\ninterface Props {\n    style?: StyleProp<ViewStyle>;\n    index: number;\n}\n\nexport const SBTextItem: React.FC<Props> = ({ style, index }) => {\n    return (\n        <View style={[styles.container, style]}>\n            <Text style={{ fontSize: 30 }} color=\"black\">\n                {index}\n            </Text>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: 'red',\n    },\n});\n","import React from 'react';\nimport { LongPressGestureHandler } from 'react-native-gesture-handler';\nimport { View } from 'react-native-ui-lib';\nimport { SBImageItem } from './SBImageItem';\nimport { SBTextItem } from './SBTextItem';\nimport Constants from 'expo-constants';\nimport type { StyleProp, ViewStyle } from 'react-native';\n\ninterface Props {\n    style?: StyleProp<ViewStyle>;\n    index: number;\n    pretty?: boolean;\n}\nexport const SBItem: React.FC<Props> = ({ style, index, pretty }) => {\n    // @ts-ignore\n    const enablePretty = Constants.manifest.extra.enablePretty;\n    const [isPretty, setIsPretty] = React.useState(pretty || enablePretty);\n    return (\n        <LongPressGestureHandler\n            onActivated={() => {\n                setIsPretty(!isPretty);\n            }}\n        >\n            <View flex>\n                {isPretty ? (\n                    <SBImageItem style={style} />\n                ) : (\n                    <SBTextItem style={style} index={index} />\n                )}\n            </View>\n        </LongPressGestureHandler>\n    );\n};\n","import { Easing as _Easing } from 'react-native-reanimated';\n\nexport enum DATA_LENGTH {\n    SINGLE_ITEM = 1,\n    DOUBLE_ITEM = 2,\n}\n\nexport const Easing = {\n    easeOutQuart: _Easing.bezier(0.25, 1, 0.5, 1),\n};\n"],"sourceRoot":""}